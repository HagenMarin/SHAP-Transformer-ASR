2025-06-07 10:25:15,650 - INFO - Using device: cuda
2025-06-07 10:25:15,650 - INFO - Loading model: facebook/wav2vec2-base-960h
2025-06-07 10:25:16,849 - INFO - Model loaded successfully
2025-06-07 10:25:16,849 - INFO - Creating test set...
2025-06-07 10:25:16,849 - INFO - Creating test set with 5 samples
2025-06-07 10:25:19,048 - INFO - Test set created with 25 total samples
2025-06-07 10:25:19,048 - INFO - Computing metrics...
2025-06-07 10:25:19,048 - INFO - Computing metrics for test set
2025-06-07 10:36:19,544 - INFO - Using device: cuda
2025-06-07 10:36:19,544 - INFO - Loading model: facebook/wav2vec2-base-960h
2025-06-07 10:36:20,755 - INFO - Model loaded successfully
2025-06-07 10:36:20,755 - INFO - Creating test set...
2025-06-07 10:36:20,755 - INFO - Creating test set with 1 samples
2025-06-07 10:36:22,780 - INFO - Test set created with 5 total samples
2025-06-07 10:36:22,780 - INFO - Computing metrics...
2025-06-07 10:36:22,781 - INFO - Computing metrics for test set
2025-06-07 10:56:29,852 - INFO - Using device: cuda
2025-06-07 10:56:29,853 - INFO - Loading model: facebook/wav2vec2-base-960h
2025-06-07 10:56:29,854 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-06-07 10:56:30,190 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/preprocessor_config.json HTTP/1.1" 200 0
2025-06-07 10:56:30,302 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/tokenizer_config.json HTTP/1.1" 200 0
2025-06-07 10:56:30,845 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/processor_config.json HTTP/1.1" 404 0
2025-06-07 10:56:31,174 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/chat_template.json HTTP/1.1" 404 0
2025-06-07 10:56:31,486 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/chat_template.jinja HTTP/1.1" 404 0
2025-06-07 10:56:31,634 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/config.json HTTP/1.1" 200 0
2025-06-07 10:56:31,761 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/config.json HTTP/1.1" 200 0
2025-06-07 10:56:32,044 - INFO - Model loaded successfully
2025-06-07 10:56:32,044 - DEBUG - Model wrapper created
2025-06-07 10:56:32,044 - INFO - Creating test set...
2025-06-07 10:56:32,044 - INFO - Creating test set with 1 samples
2025-06-07 10:56:32,390 - DEBUG - https://huggingface.co:443 "HEAD /datasets/patrickvonplaten/librispeech_asr_dummy/resolve/main/README.md HTTP/1.1" 404 0
2025-06-07 10:56:32,506 - DEBUG - https://huggingface.co:443 "GET /api/datasets/patrickvonplaten/librispeech_asr_dummy HTTP/1.1" 200 1738
2025-06-07 10:56:32,507 - DEBUG - Starting new HTTPS connection (1): s3.amazonaws.com:443
2025-06-07 10:56:32,868 - DEBUG - https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/datasets/patrickvonplaten/librispeech_asr_dummy/patrickvonplaten/librispeech_asr_dummy.py HTTP/1.1" 404 0
2025-06-07 10:56:32,869 - DEBUG - Starting new HTTPS connection (1): datasets-server.huggingface.co:443
2025-06-07 10:56:33,371 - DEBUG - https://datasets-server.huggingface.co:443 "GET /parquet?dataset=patrickvonplaten/librispeech_asr_dummy HTTP/1.1" 501 None
2025-06-07 10:56:36,415 - DEBUG - https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/datasets/patrickvonplaten/librispeech_asr_dummy/patrickvonplaten/librispeech_asr_dummy.py HTTP/1.1" 404 0
2025-06-07 10:56:36,527 - DEBUG - https://huggingface.co:443 "GET /api/datasets/patrickvonplaten/librispeech_asr_dummy/revision/f183ce202324f42196eee789dc44c8f3200e7ab6 HTTP/1.1" 200 1738
2025-06-07 10:56:36,644 - DEBUG - https://huggingface.co:443 "HEAD /datasets/patrickvonplaten/librispeech_asr_dummy/resolve/f183ce202324f42196eee789dc44c8f3200e7ab6/dataset_infos.json HTTP/1.1" 404 0
2025-06-07 10:56:36,755 - DEBUG - https://huggingface.co:443 "HEAD /datasets/patrickvonplaten/librispeech_asr_dummy/resolve/f183ce202324f42196eee789dc44c8f3200e7ab6/README.md HTTP/1.1" 404 0
2025-06-07 10:56:36,758 - DEBUG - Attempting to acquire lock 135491151231760 on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 10:56:36,758 - DEBUG - Lock 135491151231760 acquired on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 10:56:36,759 - DEBUG - Attempting to release lock 135491151231760 on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 10:56:36,759 - DEBUG - Lock 135491151231760 released on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 10:56:36,759 - DEBUG - Attempting to acquire lock 135491151339344 on /home/hagen/.cache/huggingface/datasets/_home_hagen_.cache_huggingface_datasets_patrickvonplaten___librispeech_asr_dummy_clean_2.1.0_f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc.lock
2025-06-07 10:56:36,759 - DEBUG - Lock 135491151339344 acquired on /home/hagen/.cache/huggingface/datasets/_home_hagen_.cache_huggingface_datasets_patrickvonplaten___librispeech_asr_dummy_clean_2.1.0_f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc.lock
2025-06-07 10:56:36,760 - DEBUG - open file: /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc/dataset_info.json
2025-06-07 10:56:36,760 - DEBUG - Attempting to release lock 135491151339344 on /home/hagen/.cache/huggingface/datasets/_home_hagen_.cache_huggingface_datasets_patrickvonplaten___librispeech_asr_dummy_clean_2.1.0_f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc.lock
2025-06-07 10:56:36,760 - DEBUG - Lock 135491151339344 released on /home/hagen/.cache/huggingface/datasets/_home_hagen_.cache_huggingface_datasets_patrickvonplaten___librispeech_asr_dummy_clean_2.1.0_f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc.lock
2025-06-07 10:56:36,761 - DEBUG - Attempting to acquire lock 135491151454224 on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 10:56:36,761 - DEBUG - Lock 135491151454224 acquired on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 10:56:36,762 - DEBUG - Attempting to release lock 135491151454224 on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 10:56:36,763 - DEBUG - Lock 135491151454224 released on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 10:56:36,763 - DEBUG - Attempting to acquire lock 135491151433168 on /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc_builder.lock
2025-06-07 10:56:36,763 - DEBUG - Lock 135491151433168 acquired on /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc_builder.lock
2025-06-07 10:56:36,763 - DEBUG - open file: /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc/dataset_info.json
2025-06-07 10:56:36,763 - DEBUG - Attempting to release lock 135491151433168 on /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc_builder.lock
2025-06-07 10:56:36,763 - DEBUG - Lock 135491151433168 released on /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc_builder.lock
2025-06-07 10:56:36,840 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          18	STORE_FAST(arg=3, lineno=1140)
          20	LOAD_FAST(arg=1, lineno=1141)
          22	UNARY_NEGATIVE(arg=None, lineno=1141)
          24	LOAD_FAST(arg=3, lineno=1141)
          26	SWAP(arg=2, lineno=1141)
          28	COPY(arg=2, lineno=1141)
          30	COMPARE_OP(arg=1, lineno=1141)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1141)
          38	LOAD_FAST(arg=1, lineno=1141)
          40	COMPARE_OP(arg=1, lineno=1141)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1141)
          48	JUMP_FORWARD(arg=2, lineno=1141)
>         50	POP_TOP(arg=None, lineno=1141)
          52	JUMP_FORWARD(arg=2, lineno=1141)
>         54	LOAD_CONST(arg=1, lineno=1142)
          56	STORE_FAST(arg=3, lineno=1142)
>         58	LOAD_FAST(arg=0, lineno=1144)
          60	LOAD_CONST(arg=2, lineno=1144)
          62	BINARY_SUBSCR(arg=None, lineno=1144)
          72	STORE_FAST(arg=4, lineno=1144)
          74	LOAD_FAST(arg=1, lineno=1145)
          76	UNARY_NEGATIVE(arg=None, lineno=1145)
          78	LOAD_FAST(arg=4, lineno=1145)
          80	SWAP(arg=2, lineno=1145)
          82	COPY(arg=2, lineno=1145)
          84	COMPARE_OP(arg=1, lineno=1145)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          92	LOAD_FAST(arg=1, lineno=1145)
          94	COMPARE_OP(arg=1, lineno=1145)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
         102	JUMP_FORWARD(arg=2, lineno=1145)
>        104	POP_TOP(arg=None, lineno=1145)
         106	JUMP_FORWARD(arg=2, lineno=1145)
>        108	LOAD_CONST(arg=1, lineno=1146)
         110	STORE_FAST(arg=4, lineno=1146)
>        112	LOAD_FAST(arg=2, lineno=1148)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1148)
         116	LOAD_GLOBAL(arg=1, lineno=1149)
         128	LOAD_ATTR(arg=1, lineno=1149)
         138	LOAD_FAST(arg=3, lineno=1149)
         140	PRECALL(arg=1, lineno=1149)
         144	CALL(arg=1, lineno=1149)
         154	LOAD_GLOBAL(arg=1, lineno=1149)
         166	LOAD_ATTR(arg=1, lineno=1149)
         176	LOAD_FAST(arg=4, lineno=1149)
         178	PRECALL(arg=1, lineno=1149)
         182	CALL(arg=1, lineno=1149)
         192	COMPARE_OP(arg=3, lineno=1149)
         198	RETURN_VALUE(arg=None, lineno=1149)
>        200	LOAD_GLOBAL(arg=1, lineno=1151)
         212	LOAD_ATTR(arg=2, lineno=1151)
         222	LOAD_FAST(arg=3, lineno=1151)
         224	PRECALL(arg=1, lineno=1151)
         228	CALL(arg=1, lineno=1151)
         238	LOAD_GLOBAL(arg=1, lineno=1151)
         250	LOAD_ATTR(arg=2, lineno=1151)
         260	LOAD_FAST(arg=4, lineno=1151)
         262	PRECALL(arg=1, lineno=1151)
         266	CALL(arg=1, lineno=1151)
         276	COMPARE_OP(arg=3, lineno=1151)
         282	RETURN_VALUE(arg=None, lineno=1151)
2025-06-07 10:56:36,840 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-07 10:56:36,840 - DEBUG - stack: []
2025-06-07 10:56:36,840 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-07 10:56:36,840 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-06-07 10:56:36,840 - DEBUG - stack []
2025-06-07 10:56:36,841 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-06-07 10:56:36,841 - DEBUG - stack []
2025-06-07 10:56:36,841 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-06-07 10:56:36,841 - DEBUG - stack []
2025-06-07 10:56:36,841 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-06-07 10:56:36,841 - DEBUG - stack ['$x4.0']
2025-06-07 10:56:36,841 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-06-07 10:56:36,841 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-06-07 10:56:36,841 - DEBUG - dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1140)
2025-06-07 10:56:36,841 - DEBUG - stack ['$8binary_subscr.2']
2025-06-07 10:56:36,841 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1141)
2025-06-07 10:56:36,841 - DEBUG - stack []
2025-06-07 10:56:36,841 - DEBUG - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-06-07 10:56:36,841 - DEBUG - stack ['$threshold20.3']
2025-06-07 10:56:36,842 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1141)
2025-06-07 10:56:36,842 - DEBUG - stack ['$22unary_negative.4']
2025-06-07 10:56:36,842 - DEBUG - dispatch pc=26, inst=SWAP(arg=2, lineno=1141)
2025-06-07 10:56:36,842 - DEBUG - stack ['$22unary_negative.4', '$x024.5']
2025-06-07 10:56:36,842 - DEBUG - dispatch pc=28, inst=COPY(arg=2, lineno=1141)
2025-06-07 10:56:36,842 - DEBUG - stack ['$x024.5', '$22unary_negative.4']
2025-06-07 10:56:36,842 - DEBUG - dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1141)
2025-06-07 10:56:36,842 - DEBUG - stack ['$x024.5', '$22unary_negative.4', '$x024.5']
2025-06-07 10:56:36,842 - DEBUG - dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1141)
2025-06-07 10:56:36,842 - DEBUG - stack ['$x024.5', '$30compare_op.6']
2025-06-07 10:56:36,842 - DEBUG - end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
2025-06-07 10:56:36,842 - DEBUG - pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
2025-06-07 10:56:36,842 - DEBUG - stack: ['$phi38.0']
2025-06-07 10:56:36,842 - DEBUG - state.pc_initial: State(pc_initial=38 nstack_initial=1)
2025-06-07 10:56:36,842 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1141)
2025-06-07 10:56:36,843 - DEBUG - stack ['$phi38.0']
2025-06-07 10:56:36,843 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1141)
2025-06-07 10:56:36,843 - DEBUG - stack ['$phi38.0', '$threshold38.1']
2025-06-07 10:56:36,843 - DEBUG - dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1141)
2025-06-07 10:56:36,843 - DEBUG - stack ['$40compare_op.2']
2025-06-07 10:56:36,843 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2025-06-07 10:56:36,843 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2025-06-07 10:56:36,843 - DEBUG - stack: ['$phi50.0']
2025-06-07 10:56:36,843 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2025-06-07 10:56:36,843 - DEBUG - dispatch pc=50, inst=POP_TOP(arg=None, lineno=1141)
2025-06-07 10:56:36,843 - DEBUG - stack ['$phi50.0']
2025-06-07 10:56:36,843 - DEBUG - dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-06-07 10:56:36,843 - DEBUG - stack []
2025-06-07 10:56:36,843 - DEBUG - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2025-06-07 10:56:36,844 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2025-06-07 10:56:36,844 - DEBUG - stack: []
2025-06-07 10:56:36,844 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-06-07 10:56:36,844 - DEBUG - dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-06-07 10:56:36,844 - DEBUG - stack []
2025-06-07 10:56:36,844 - DEBUG - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
2025-06-07 10:56:36,844 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
2025-06-07 10:56:36,844 - DEBUG - stack: []
2025-06-07 10:56:36,844 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2025-06-07 10:56:36,844 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1144)
2025-06-07 10:56:36,844 - DEBUG - stack []
2025-06-07 10:56:36,844 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1144)
2025-06-07 10:56:36,844 - DEBUG - stack ['$x58.0']
2025-06-07 10:56:36,844 - DEBUG - dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-06-07 10:56:36,844 - DEBUG - stack ['$x58.0', '$const60.1.2']
2025-06-07 10:56:36,845 - DEBUG - dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1144)
2025-06-07 10:56:36,845 - DEBUG - stack ['$62binary_subscr.2']
2025-06-07 10:56:36,845 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1145)
2025-06-07 10:56:36,845 - DEBUG - stack []
2025-06-07 10:56:36,845 - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-06-07 10:56:36,845 - DEBUG - stack ['$threshold74.3']
2025-06-07 10:56:36,845 - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1145)
2025-06-07 10:56:36,845 - DEBUG - stack ['$76unary_negative.4']
2025-06-07 10:56:36,845 - DEBUG - dispatch pc=80, inst=SWAP(arg=2, lineno=1145)
2025-06-07 10:56:36,845 - DEBUG - stack ['$76unary_negative.4', '$x178.5']
2025-06-07 10:56:36,845 - DEBUG - dispatch pc=82, inst=COPY(arg=2, lineno=1145)
2025-06-07 10:56:36,845 - DEBUG - stack ['$x178.5', '$76unary_negative.4']
2025-06-07 10:56:36,845 - DEBUG - dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1145)
2025-06-07 10:56:36,845 - DEBUG - stack ['$x178.5', '$76unary_negative.4', '$x178.5']
2025-06-07 10:56:36,845 - DEBUG - dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
2025-06-07 10:56:36,846 - DEBUG - stack ['$x178.5', '$84compare_op.6']
2025-06-07 10:56:36,846 - DEBUG - end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
2025-06-07 10:56:36,846 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2025-06-07 10:56:36,846 - DEBUG - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2025-06-07 10:56:36,846 - DEBUG - stack: []
2025-06-07 10:56:36,846 - DEBUG - state.pc_initial: State(pc_initial=54 nstack_initial=0)
2025-06-07 10:56:36,846 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1142)
2025-06-07 10:56:36,846 - DEBUG - stack []
2025-06-07 10:56:36,846 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1142)
2025-06-07 10:56:36,846 - DEBUG - stack ['$const54.0.1']
2025-06-07 10:56:36,846 - DEBUG - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2025-06-07 10:56:36,846 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
2025-06-07 10:56:36,846 - DEBUG - stack: ['$phi92.0']
2025-06-07 10:56:36,846 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-06-07 10:56:36,846 - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1145)
2025-06-07 10:56:36,847 - DEBUG - stack ['$phi92.0']
2025-06-07 10:56:36,847 - DEBUG - dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1145)
2025-06-07 10:56:36,847 - DEBUG - stack ['$phi92.0', '$threshold92.1']
2025-06-07 10:56:36,847 - DEBUG - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
2025-06-07 10:56:36,847 - DEBUG - stack ['$94compare_op.2']
2025-06-07 10:56:36,847 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
2025-06-07 10:56:36,847 - DEBUG - pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 10:56:36,847 - DEBUG - stack: ['$phi104.0']
2025-06-07 10:56:36,847 - DEBUG - state.pc_initial: State(pc_initial=104 nstack_initial=1)
2025-06-07 10:56:36,847 - DEBUG - dispatch pc=104, inst=POP_TOP(arg=None, lineno=1145)
2025-06-07 10:56:36,847 - DEBUG - stack ['$phi104.0']
2025-06-07 10:56:36,847 - DEBUG - dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-06-07 10:56:36,847 - DEBUG - stack []
2025-06-07 10:56:36,847 - DEBUG - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2025-06-07 10:56:36,848 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 10:56:36,848 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 10:56:36,848 - DEBUG - stack: []
2025-06-07 10:56:36,848 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-07 10:56:36,848 - DEBUG - dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-06-07 10:56:36,848 - DEBUG - stack []
2025-06-07 10:56:36,848 - DEBUG - end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
2025-06-07 10:56:36,848 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
2025-06-07 10:56:36,848 - DEBUG - stack: []
2025-06-07 10:56:36,848 - DEBUG - state.pc_initial: State(pc_initial=112 nstack_initial=0)
2025-06-07 10:56:36,848 - DEBUG - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1148)
2025-06-07 10:56:36,848 - DEBUG - stack []
2025-06-07 10:56:36,848 - DEBUG - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1148)
2025-06-07 10:56:36,848 - DEBUG - stack ['$zero_pos112.0']
2025-06-07 10:56:36,849 - DEBUG - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
2025-06-07 10:56:36,849 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2025-06-07 10:56:36,849 - DEBUG - pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2025-06-07 10:56:36,849 - DEBUG - stack: []
2025-06-07 10:56:36,849 - DEBUG - state.pc_initial: State(pc_initial=108 nstack_initial=0)
2025-06-07 10:56:36,849 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1146)
2025-06-07 10:56:36,849 - DEBUG - stack []
2025-06-07 10:56:36,849 - DEBUG - dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1146)
2025-06-07 10:56:36,849 - DEBUG - stack ['$const108.0.1']
2025-06-07 10:56:36,849 - DEBUG - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2025-06-07 10:56:36,849 - DEBUG - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 10:56:36,849 - DEBUG - stack: []
2025-06-07 10:56:36,849 - DEBUG - state.pc_initial: State(pc_initial=116 nstack_initial=0)
2025-06-07 10:56:36,849 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1149)
2025-06-07 10:56:36,850 - DEBUG - stack []
2025-06-07 10:56:36,850 - DEBUG - dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1149)
2025-06-07 10:56:36,850 - DEBUG - stack ['$null$116.1', '$116load_global.0']
2025-06-07 10:56:36,850 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1149)
2025-06-07 10:56:36,850 - DEBUG - stack ['$null$116.1', '$128load_attr.2']
2025-06-07 10:56:36,850 - DEBUG - dispatch pc=140, inst=PRECALL(arg=1, lineno=1149)
2025-06-07 10:56:36,850 - DEBUG - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2025-06-07 10:56:36,850 - DEBUG - dispatch pc=144, inst=CALL(arg=1, lineno=1149)
2025-06-07 10:56:36,850 - DEBUG - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2025-06-07 10:56:36,850 - DEBUG - dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1149)
2025-06-07 10:56:36,850 - DEBUG - stack ['$144call.4']
2025-06-07 10:56:36,850 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1149)
2025-06-07 10:56:36,850 - DEBUG - stack ['$144call.4', '$null$154.6', '$154load_global.5']
2025-06-07 10:56:36,850 - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1149)
2025-06-07 10:56:36,850 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7']
2025-06-07 10:56:36,851 - DEBUG - dispatch pc=178, inst=PRECALL(arg=1, lineno=1149)
2025-06-07 10:56:36,851 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2025-06-07 10:56:36,851 - DEBUG - dispatch pc=182, inst=CALL(arg=1, lineno=1149)
2025-06-07 10:56:36,851 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2025-06-07 10:56:36,851 - DEBUG - dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1149)
2025-06-07 10:56:36,851 - DEBUG - stack ['$144call.4', '$182call.9']
2025-06-07 10:56:36,851 - DEBUG - dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-06-07 10:56:36,851 - DEBUG - stack ['$192compare_op.10']
2025-06-07 10:56:36,851 - DEBUG - end state. edges=[]
2025-06-07 10:56:36,851 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 10:56:36,851 - DEBUG - stack: []
2025-06-07 10:56:36,851 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=0)
2025-06-07 10:56:36,851 - DEBUG - dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1151)
2025-06-07 10:56:36,851 - DEBUG - stack []
2025-06-07 10:56:36,852 - DEBUG - dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1151)
2025-06-07 10:56:36,852 - DEBUG - stack ['$null$200.1', '$200load_global.0']
2025-06-07 10:56:36,852 - DEBUG - dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1151)
2025-06-07 10:56:36,852 - DEBUG - stack ['$null$200.1', '$212load_attr.2']
2025-06-07 10:56:36,852 - DEBUG - dispatch pc=224, inst=PRECALL(arg=1, lineno=1151)
2025-06-07 10:56:36,852 - DEBUG - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2025-06-07 10:56:36,852 - DEBUG - dispatch pc=228, inst=CALL(arg=1, lineno=1151)
2025-06-07 10:56:36,852 - DEBUG - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2025-06-07 10:56:36,852 - DEBUG - dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1151)
2025-06-07 10:56:36,852 - DEBUG - stack ['$228call.4']
2025-06-07 10:56:36,852 - DEBUG - dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1151)
2025-06-07 10:56:36,852 - DEBUG - stack ['$228call.4', '$null$238.6', '$238load_global.5']
2025-06-07 10:56:36,853 - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1151)
2025-06-07 10:56:36,853 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7']
2025-06-07 10:56:36,853 - DEBUG - dispatch pc=262, inst=PRECALL(arg=1, lineno=1151)
2025-06-07 10:56:36,853 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2025-06-07 10:56:36,853 - DEBUG - dispatch pc=266, inst=CALL(arg=1, lineno=1151)
2025-06-07 10:56:36,853 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2025-06-07 10:56:36,853 - DEBUG - dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1151)
2025-06-07 10:56:36,853 - DEBUG - stack ['$228call.4', '$266call.9']
2025-06-07 10:56:36,853 - DEBUG - dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-06-07 10:56:36,853 - DEBUG - stack ['$276compare_op.10']
2025-06-07 10:56:36,853 - DEBUG - end state. edges=[]
2025-06-07 10:56:36,854 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0)])
2025-06-07 10:56:36,854 - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-07 10:56:36,854 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
2025-06-07 10:56:36,854 - DEBUG - defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
2025-06-07 10:56:36,854 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2025-06-07 10:56:36,854 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2025-06-07 10:56:36,854 - DEBUG - keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
2025-06-07 10:56:36,855 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
2025-06-07 10:56:36,855 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-07 10:56:36,855 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
2025-06-07 10:56:36,855 - DEBUG - block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
2025-06-07 10:56:36,855 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
2025-06-07 10:56:36,855 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2025-06-07 10:56:36,855 - DEBUG - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0.1'}), (56, {'value': '$const54.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2025-06-07 10:56:36,855 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1.2'}), (62, {'index': '$const60.1.2', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
2025-06-07 10:56:36,855 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
2025-06-07 10:56:36,855 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
2025-06-07 10:56:36,855 - DEBUG - block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2025-06-07 10:56:36,856 - DEBUG - block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0.1'}), (110, {'value': '$const108.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2025-06-07 10:56:36,856 - DEBUG - block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
2025-06-07 10:56:36,856 - DEBUG - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 10:56:36,856 - DEBUG - block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 10:56:36,857 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1.2 = const(int, -1)            ['$const60.1.2']
    x1 = getitem(value=x, index=$const60.1.2, fn=<built-in function getitem>) ['$const60.1.2', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

2025-06-07 10:56:36,955 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1023)
           2	RESUME(arg=0, lineno=1023)
           4	LOAD_FAST(arg=0, lineno=1026)
           6	LOAD_CONST(arg=1, lineno=1026)
           8	BINARY_SUBSCR(arg=None, lineno=1026)
          18	LOAD_FAST(arg=0, lineno=1026)
          20	LOAD_CONST(arg=2, lineno=1026)
          22	BINARY_SUBSCR(arg=None, lineno=1026)
          32	COMPARE_OP(arg=4, lineno=1026)
          38	LOAD_FAST(arg=0, lineno=1026)
          40	LOAD_CONST(arg=1, lineno=1026)
          42	BINARY_SUBSCR(arg=None, lineno=1026)
          52	LOAD_FAST(arg=0, lineno=1026)
          54	LOAD_CONST(arg=3, lineno=1026)
          56	BINARY_SUBSCR(arg=None, lineno=1026)
          66	COMPARE_OP(arg=5, lineno=1026)
          72	BINARY_OP(arg=1, lineno=1026)
          76	RETURN_VALUE(arg=None, lineno=1026)
2025-06-07 10:56:36,955 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-07 10:56:36,955 - DEBUG - stack: []
2025-06-07 10:56:36,955 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-07 10:56:36,955 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1023)
2025-06-07 10:56:36,955 - DEBUG - stack []
2025-06-07 10:56:36,955 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1023)
2025-06-07 10:56:36,955 - DEBUG - stack []
2025-06-07 10:56:36,955 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)
2025-06-07 10:56:36,955 - DEBUG - stack []
2025-06-07 10:56:36,955 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)
2025-06-07 10:56:36,955 - DEBUG - stack ['$x4.0']
2025-06-07 10:56:36,955 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-06-07 10:56:36,955 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-06-07 10:56:36,955 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1026)
2025-06-07 10:56:36,955 - DEBUG - stack ['$8binary_subscr.2']
2025-06-07 10:56:36,956 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1026)
2025-06-07 10:56:36,956 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-06-07 10:56:36,956 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-06-07 10:56:36,956 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-06-07 10:56:36,956 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1026)
2025-06-07 10:56:36,956 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-06-07 10:56:36,956 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1026)
2025-06-07 10:56:36,956 - DEBUG - stack ['$32compare_op.6']
2025-06-07 10:56:36,956 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1026)
2025-06-07 10:56:36,956 - DEBUG - stack ['$32compare_op.6', '$x38.7']
2025-06-07 10:56:36,956 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-06-07 10:56:36,956 - DEBUG - stack ['$32compare_op.6', '$x38.7', '$const40.8.1']
2025-06-07 10:56:36,956 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1026)
2025-06-07 10:56:36,956 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9']
2025-06-07 10:56:36,956 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1026)
2025-06-07 10:56:36,957 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2025-06-07 10:56:36,957 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-06-07 10:56:36,957 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11.3']
2025-06-07 10:56:36,957 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1026)
2025-06-07 10:56:36,957 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2025-06-07 10:56:36,957 - DEBUG - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1026)
2025-06-07 10:56:36,957 - DEBUG - stack ['$32compare_op.6', '$66compare_op.13']
2025-06-07 10:56:36,957 - DEBUG - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1026)
2025-06-07 10:56:36,957 - DEBUG - stack ['$binop_and_72.14']
2025-06-07 10:56:36,957 - DEBUG - end state. edges=[]
2025-06-07 10:56:36,957 - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-07 10:56:36,957 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-07 10:56:36,957 - DEBUG - defmap: {}
2025-06-07 10:56:36,957 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-07 10:56:36,958 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-07 10:56:36,958 - DEBUG - keep phismap: {}
2025-06-07 10:56:36,958 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-07 10:56:36,958 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-07 10:56:36,958 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8.1'}), (42, {'index': '$const40.8.1', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11.3'}), (56, {'index': '$const54.11.3', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 10:56:36,958 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8.1 = const(int, 0)             ['$const40.8.1']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8.1, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8.1', 'x']
    $const54.11.3 = const(int, 1)            ['$const54.11.3']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11.3, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11.3', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2025-06-07 10:56:36,959 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1029)
           2	RESUME(arg=0, lineno=1029)
           4	LOAD_FAST(arg=0, lineno=1032)
           6	LOAD_CONST(arg=1, lineno=1032)
           8	BINARY_SUBSCR(arg=None, lineno=1032)
          18	LOAD_FAST(arg=0, lineno=1032)
          20	LOAD_CONST(arg=2, lineno=1032)
          22	BINARY_SUBSCR(arg=None, lineno=1032)
          32	COMPARE_OP(arg=0, lineno=1032)
          38	LOAD_FAST(arg=0, lineno=1032)
          40	LOAD_CONST(arg=1, lineno=1032)
          42	BINARY_SUBSCR(arg=None, lineno=1032)
          52	LOAD_FAST(arg=0, lineno=1032)
          54	LOAD_CONST(arg=3, lineno=1032)
          56	BINARY_SUBSCR(arg=None, lineno=1032)
          66	COMPARE_OP(arg=1, lineno=1032)
          72	BINARY_OP(arg=1, lineno=1032)
          76	RETURN_VALUE(arg=None, lineno=1032)
2025-06-07 10:56:36,959 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-07 10:56:36,959 - DEBUG - stack: []
2025-06-07 10:56:36,959 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-07 10:56:36,959 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1029)
2025-06-07 10:56:36,959 - DEBUG - stack []
2025-06-07 10:56:36,959 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1029)
2025-06-07 10:56:36,959 - DEBUG - stack []
2025-06-07 10:56:36,959 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)
2025-06-07 10:56:36,959 - DEBUG - stack []
2025-06-07 10:56:36,959 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)
2025-06-07 10:56:36,959 - DEBUG - stack ['$x4.0']
2025-06-07 10:56:36,959 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-06-07 10:56:36,959 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-06-07 10:56:36,959 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1032)
2025-06-07 10:56:36,959 - DEBUG - stack ['$8binary_subscr.2']
2025-06-07 10:56:36,960 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1032)
2025-06-07 10:56:36,960 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-06-07 10:56:36,960 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-06-07 10:56:36,960 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-06-07 10:56:36,960 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1032)
2025-06-07 10:56:36,960 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-06-07 10:56:36,960 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1032)
2025-06-07 10:56:36,960 - DEBUG - stack ['$32compare_op.6']
2025-06-07 10:56:36,960 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1032)
2025-06-07 10:56:36,960 - DEBUG - stack ['$32compare_op.6', '$x38.7']
2025-06-07 10:56:36,960 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-06-07 10:56:36,960 - DEBUG - stack ['$32compare_op.6', '$x38.7', '$const40.8.1']
2025-06-07 10:56:36,960 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1032)
2025-06-07 10:56:36,960 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9']
2025-06-07 10:56:36,960 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1032)
2025-06-07 10:56:36,961 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2025-06-07 10:56:36,961 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-06-07 10:56:36,961 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11.3']
2025-06-07 10:56:36,961 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1032)
2025-06-07 10:56:36,961 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2025-06-07 10:56:36,961 - DEBUG - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1032)
2025-06-07 10:56:36,961 - DEBUG - stack ['$32compare_op.6', '$66compare_op.13']
2025-06-07 10:56:36,961 - DEBUG - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1032)
2025-06-07 10:56:36,961 - DEBUG - stack ['$binop_and_72.14']
2025-06-07 10:56:36,961 - DEBUG - end state. edges=[]
2025-06-07 10:56:36,961 - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-07 10:56:36,961 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-07 10:56:36,961 - DEBUG - defmap: {}
2025-06-07 10:56:36,961 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-07 10:56:36,962 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-07 10:56:36,962 - DEBUG - keep phismap: {}
2025-06-07 10:56:36,962 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-07 10:56:36,962 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-07 10:56:36,962 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8.1'}), (42, {'index': '$const40.8.1', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11.3'}), (56, {'index': '$const54.11.3', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 10:56:36,962 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8.1 = const(int, 0)             ['$const40.8.1']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8.1, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8.1', 'x']
    $const54.11.3 = const(int, 1)            ['$const54.11.3']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11.3, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11.3', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2025-06-07 10:56:37,333 - DEBUG - Added clean sample 1
2025-06-07 10:56:37,334 - DEBUG - Added noisy sample 1 with SNR 20dB
2025-06-07 10:56:37,336 - DEBUG - Added noisy sample 1 with SNR 0dB
2025-06-07 10:56:37,336 - INFO - Test set created with 3 total samples
2025-06-07 10:56:37,336 - INFO - Computing metrics...
2025-06-07 10:56:37,336 - INFO - Computing metrics for test set
2025-06-07 10:56:37,337 - DEBUG - Processing sample 1/3
2025-06-07 10:56:37,622 - DEBUG - Model confidence: 0.9745
2025-06-07 10:56:37,622 - DEBUG - Computing SHAP values
2025-06-07 10:56:37,627 - DEBUG - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 10:56:37,708 - DEBUG - Computing SHAP values with GradientExplainer
2025-06-07 11:05:09,289 - DEBUG - SHAP values computed with shape (292,)
2025-06-07 11:05:09,289 - DEBUG - SHAP values shape: (292,)
2025-06-07 11:05:09,292 - DEBUG - WER: 0.0000
2025-06-07 11:05:09,292 - DEBUG - SHAP-confidence correlation: nan
2025-06-07 11:05:09,292 - DEBUG - SHAP-WER correlation: nan
2025-06-07 11:05:09,293 - DEBUG - Processing sample 2/3
2025-06-07 11:05:09,300 - DEBUG - Model confidence: 0.9806
2025-06-07 11:05:09,300 - DEBUG - Computing SHAP values
2025-06-07 11:05:09,300 - DEBUG - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 11:05:09,307 - DEBUG - Computing SHAP values with GradientExplainer
2025-06-07 11:13:43,254 - DEBUG - SHAP values computed with shape (292,)
2025-06-07 11:13:43,254 - DEBUG - SHAP values shape: (292,)
2025-06-07 11:13:43,255 - DEBUG - WER: 0.0000
2025-06-07 11:13:43,258 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-06-07 11:13:43,258 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-07 11:13:43,258 - DEBUG - stack: []
2025-06-07 11:13:43,258 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-07 11:13:43,258 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-06-07 11:13:43,258 - DEBUG - stack []
2025-06-07 11:13:43,258 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-06-07 11:13:43,258 - DEBUG - stack []
2025-06-07 11:13:43,258 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-06-07 11:13:43,258 - DEBUG - stack []
2025-06-07 11:13:43,258 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-06-07 11:13:43,259 - DEBUG - stack ['$x4.0']
2025-06-07 11:13:43,259 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-06-07 11:13:43,259 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-06-07 11:13:43,259 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-06-07 11:13:43,259 - DEBUG - stack ['$8binary_subscr.2']
2025-06-07 11:13:43,259 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-06-07 11:13:43,259 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-06-07 11:13:43,259 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-06-07 11:13:43,259 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-06-07 11:13:43,259 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-06-07 11:13:43,259 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-06-07 11:13:43,259 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-06-07 11:13:43,259 - DEBUG - stack ['$binop_add32.6']
2025-06-07 11:13:43,259 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-06-07 11:13:43,260 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-06-07 11:13:43,260 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-06-07 11:13:43,260 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-06-07 11:13:43,260 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-06-07 11:13:43,260 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-06-07 11:13:43,260 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-06-07 11:13:43,260 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-06-07 11:13:43,260 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-06-07 11:13:43,260 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-06-07 11:13:43,260 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-06-07 11:13:43,260 - DEBUG - stack ['$binop_sub56.12']
2025-06-07 11:13:43,260 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-06-07 11:13:43,260 - DEBUG - stack []
2025-06-07 11:13:43,260 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-06-07 11:13:43,261 - DEBUG - stack ['$x62.13']
2025-06-07 11:13:43,261 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-06-07 11:13:43,261 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-06-07 11:13:43,261 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-06-07 11:13:43,261 - DEBUG - stack ['$66binary_subscr.15']
2025-06-07 11:13:43,261 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-06-07 11:13:43,261 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-06-07 11:13:43,261 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-06-07 11:13:43,261 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-06-07 11:13:43,261 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-06-07 11:13:43,261 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-06-07 11:13:43,261 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-06-07 11:13:43,261 - DEBUG - stack ['$binop_sub90.19']
2025-06-07 11:13:43,261 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-06-07 11:13:43,261 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-06-07 11:13:43,262 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-06-07 11:13:43,262 - DEBUG - stack ['$binop_truediv96.21']
2025-06-07 11:13:43,262 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-06-07 11:13:43,262 - DEBUG - stack []
2025-06-07 11:13:43,262 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-06-07 11:13:43,262 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-06-07 11:13:43,262 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-06-07 11:13:43,262 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-06-07 11:13:43,262 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-06-07 11:13:43,262 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-06-07 11:13:43,262 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-06-07 11:13:43,262 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-06-07 11:13:43,262 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-06-07 11:13:43,262 - DEBUG - stack ['$130call.26']
2025-06-07 11:13:43,263 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-06-07 11:13:43,263 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-06-07 11:13:43,263 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-06-07 11:13:43,263 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-06-07 11:13:43,263 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-06-07 11:13:43,263 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-06-07 11:13:43,263 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-06-07 11:13:43,263 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-06-07 11:13:43,263 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-06-07 11:13:43,263 - DEBUG - stack ['$130call.26', '$168call.31']
2025-06-07 11:13:43,263 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-06-07 11:13:43,263 - DEBUG - stack ['$178compare_op.32']
2025-06-07 11:13:43,263 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-06-07 11:13:43,264 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-06-07 11:13:43,264 - DEBUG - stack: []
2025-06-07 11:13:43,264 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-06-07 11:13:43,264 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-06-07 11:13:43,264 - DEBUG - stack []
2025-06-07 11:13:43,264 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-06-07 11:13:43,264 - DEBUG - stack ['$const186.0.4']
2025-06-07 11:13:43,264 - DEBUG - end state. edges=[]
2025-06-07 11:13:43,264 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-06-07 11:13:43,264 - DEBUG - stack: []
2025-06-07 11:13:43,264 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-06-07 11:13:43,264 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-06-07 11:13:43,264 - DEBUG - stack []
2025-06-07 11:13:43,264 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-06-07 11:13:43,264 - DEBUG - stack ['$b190.0']
2025-06-07 11:13:43,265 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-06-07 11:13:43,265 - DEBUG - stack ['$192unary_negative.1']
2025-06-07 11:13:43,265 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-06-07 11:13:43,265 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-06-07 11:13:43,265 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-06-07 11:13:43,265 - DEBUG - stack ['$binop_truediv196.3']
2025-06-07 11:13:43,265 - DEBUG - end state. edges=[]
2025-06-07 11:13:43,265 - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-07 11:13:43,265 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-06-07 11:13:43,265 - DEBUG - defmap: {}
2025-06-07 11:13:43,265 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:13:43,265 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:13:43,266 - DEBUG - keep phismap: {}
2025-06-07 11:13:43,266 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-07 11:13:43,266 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-07 11:13:43,266 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-06-07 11:13:43,266 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:13:43,266 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:13:43,267 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-06-07 11:13:43,290 - DEBUG - Noise mask shape: (93680,)
2025-06-07 11:13:43,291 - DEBUG - Resized noise mask shape: (292,)
2025-06-07 11:13:43,291 - DEBUG - SHAP-noise correlation: nan
2025-06-07 11:13:43,291 - DEBUG - SHAP-confidence correlation: nan
2025-06-07 11:13:43,291 - DEBUG - SHAP-WER correlation: nan
2025-06-07 11:13:43,292 - DEBUG - Processing sample 3/3
2025-06-07 11:13:43,299 - DEBUG - Model confidence: 0.8107
2025-06-07 11:13:43,299 - DEBUG - Computing SHAP values
2025-06-07 11:13:43,299 - DEBUG - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 11:13:43,305 - DEBUG - Computing SHAP values with GradientExplainer
2025-06-07 11:22:09,529 - DEBUG - SHAP values computed with shape (292,)
2025-06-07 11:22:09,530 - DEBUG - SHAP values shape: (292,)
2025-06-07 11:22:09,531 - DEBUG - WER: 1.0000
2025-06-07 11:22:09,531 - DEBUG - Noise mask shape: (93680,)
2025-06-07 11:22:09,532 - DEBUG - Resized noise mask shape: (292,)
2025-06-07 11:22:09,532 - DEBUG - SHAP-noise correlation: nan
2025-06-07 11:22:09,532 - DEBUG - SHAP-confidence correlation: nan
2025-06-07 11:22:09,532 - DEBUG - SHAP-WER correlation: nan
2025-06-07 11:22:09,533 - INFO - Average shap_noise_correlation: nan
2025-06-07 11:22:09,533 - INFO - Average shap_confidence_correlation: nan
2025-06-07 11:22:09,533 - INFO - Average wer_correlation: nan
2025-06-07 11:22:09,533 - INFO - Visualizing results...
2025-06-07 11:22:09,533 - INFO - Saving results to results
2025-06-07 11:22:09,534 - INFO - Metrics saved to metrics.json
2025-06-07 11:22:09,534 - DEBUG - Creating visualization for sample 1
2025-06-07 11:22:09,534 - DEBUG - Computing SHAP values
2025-06-07 11:22:09,535 - DEBUG - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 11:22:09,541 - DEBUG - Computing SHAP values with GradientExplainer
2025-06-07 11:30:39,299 - DEBUG - SHAP values computed with shape (292,)
2025-06-07 11:30:39,318 - DEBUG - Loaded backend agg version v2.2.
2025-06-07 11:30:39,320 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-06-07 11:30:39,321 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,321 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:30:39,321 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:30:39,321 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:30:39,321 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,321 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,321 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,321 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-06-07 11:30:39,321 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,321 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,322 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,322 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,322 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,322 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,322 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-06-07 11:30:39,322 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-06-07 11:30:39,322 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,322 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,322 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,322 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,322 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-06-07 11:30:39,323 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:30:39,323 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,323 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,323 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,323 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:30:39,323 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,323 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,323 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,323 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,323 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,323 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:30:39,323 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:30:39,324 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,324 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:30:39,324 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,324 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,324 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,324 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-06-07 11:30:39,324 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-06-07 11:30:39,324 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,324 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:30:39,324 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,324 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,325 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-06-07 11:30:39,325 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,325 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,325 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,325 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:30:39,325 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-06-07 11:30:39,325 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:30:39,325 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-06-07 11:30:39,325 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:30:39,325 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-06-07 11:30:39,325 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-06-07 11:30:39,326 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,326 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-06-07 11:30:39,326 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,326 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-06-07 11:30:39,339 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7b3a68ae9cd0>
2025-06-07 11:30:39,343 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x7b3a68a0e610> <matplotlib.colors.Normalize object at 0x7b3a68a0e610>
2025-06-07 11:30:39,344 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7b3a6895dcd0>
2025-06-07 11:30:39,345 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x7b3a68a0e610> <matplotlib.colors.Normalize object at 0x7b3a68a0e610>
2025-06-07 11:30:39,345 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7b3a6895dcd0>
2025-06-07 11:30:39,347 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7b3a689453d0>
2025-06-07 11:30:39,360 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-06-07 11:30:39,360 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,360 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:30:39,360 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:30:39,360 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:30:39,360 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,360 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,360 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,360 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-06-07 11:30:39,361 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,361 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,361 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,361 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,361 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,361 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,361 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-06-07 11:30:39,361 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-06-07 11:30:39,361 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,361 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,362 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,362 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,362 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-06-07 11:30:39,362 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:30:39,362 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,362 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,362 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,362 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:30:39,362 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,362 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,363 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,363 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,363 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,363 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:30:39,363 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:30:39,363 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,363 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:30:39,363 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,363 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,363 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,363 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-06-07 11:30:39,363 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-06-07 11:30:39,364 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,364 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:30:39,364 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,364 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,364 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-06-07 11:30:39,364 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,364 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,364 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:30:39,364 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:30:39,364 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-06-07 11:30:39,364 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:30:39,364 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-06-07 11:30:39,365 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:30:39,365 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-06-07 11:30:39,365 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-06-07 11:30:39,365 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,365 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-06-07 11:30:39,365 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:30:39,365 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-06-07 11:30:40,552 - DEBUG - Visualization saved for sample 1
2025-06-07 11:30:40,553 - DEBUG - Creating visualization for sample 2
2025-06-07 11:30:40,553 - DEBUG - Computing SHAP values
2025-06-07 11:30:40,554 - DEBUG - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 11:30:40,560 - DEBUG - Computing SHAP values with GradientExplainer
2025-06-07 11:37:00,722 - INFO - Using device: cuda
2025-06-07 11:37:00,722 - INFO - Loading model: facebook/wav2vec2-base-960h
2025-06-07 11:37:00,723 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-06-07 11:37:03,790 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/preprocessor_config.json HTTP/1.1" 200 0
2025-06-07 11:37:03,900 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/tokenizer_config.json HTTP/1.1" 200 0
2025-06-07 11:37:04,013 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/processor_config.json HTTP/1.1" 404 0
2025-06-07 11:37:04,125 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/chat_template.json HTTP/1.1" 404 0
2025-06-07 11:37:04,235 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/chat_template.jinja HTTP/1.1" 404 0
2025-06-07 11:37:04,345 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/config.json HTTP/1.1" 200 0
2025-06-07 11:37:04,456 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/config.json HTTP/1.1" 200 0
2025-06-07 11:37:04,741 - INFO - Model loaded successfully
2025-06-07 11:37:04,741 - DEBUG - Model wrapper created
2025-06-07 11:37:04,741 - INFO - Creating test set...
2025-06-07 11:37:04,741 - INFO - Creating test set with 1 samples
2025-06-07 11:37:04,851 - DEBUG - https://huggingface.co:443 "HEAD /datasets/patrickvonplaten/librispeech_asr_dummy/resolve/main/README.md HTTP/1.1" 404 0
2025-06-07 11:37:04,963 - DEBUG - https://huggingface.co:443 "GET /api/datasets/patrickvonplaten/librispeech_asr_dummy HTTP/1.1" 200 1738
2025-06-07 11:37:04,964 - DEBUG - Starting new HTTPS connection (1): s3.amazonaws.com:443
2025-06-07 11:37:05,305 - DEBUG - https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/datasets/patrickvonplaten/librispeech_asr_dummy/patrickvonplaten/librispeech_asr_dummy.py HTTP/1.1" 404 0
2025-06-07 11:37:05,305 - DEBUG - Starting new HTTPS connection (1): datasets-server.huggingface.co:443
2025-06-07 11:37:05,814 - DEBUG - https://datasets-server.huggingface.co:443 "GET /parquet?dataset=patrickvonplaten/librispeech_asr_dummy HTTP/1.1" 501 None
2025-06-07 11:37:05,924 - DEBUG - https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/datasets/patrickvonplaten/librispeech_asr_dummy/patrickvonplaten/librispeech_asr_dummy.py HTTP/1.1" 404 0
2025-06-07 11:37:06,037 - DEBUG - https://huggingface.co:443 "GET /api/datasets/patrickvonplaten/librispeech_asr_dummy/revision/f183ce202324f42196eee789dc44c8f3200e7ab6 HTTP/1.1" 200 1738
2025-06-07 11:37:06,148 - DEBUG - https://huggingface.co:443 "HEAD /datasets/patrickvonplaten/librispeech_asr_dummy/resolve/f183ce202324f42196eee789dc44c8f3200e7ab6/dataset_infos.json HTTP/1.1" 404 0
2025-06-07 11:37:06,262 - DEBUG - https://huggingface.co:443 "HEAD /datasets/patrickvonplaten/librispeech_asr_dummy/resolve/f183ce202324f42196eee789dc44c8f3200e7ab6/README.md HTTP/1.1" 404 0
2025-06-07 11:37:06,264 - DEBUG - Attempting to acquire lock 124774012888848 on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:37:06,265 - DEBUG - Lock 124774012888848 acquired on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:37:06,265 - DEBUG - Attempting to release lock 124774012888848 on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:37:06,266 - DEBUG - Lock 124774012888848 released on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:37:06,266 - DEBUG - Attempting to acquire lock 124773557236816 on /home/hagen/.cache/huggingface/datasets/_home_hagen_.cache_huggingface_datasets_patrickvonplaten___librispeech_asr_dummy_clean_2.1.0_f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc.lock
2025-06-07 11:37:06,266 - DEBUG - Lock 124773557236816 acquired on /home/hagen/.cache/huggingface/datasets/_home_hagen_.cache_huggingface_datasets_patrickvonplaten___librispeech_asr_dummy_clean_2.1.0_f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc.lock
2025-06-07 11:37:06,267 - DEBUG - open file: /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc/dataset_info.json
2025-06-07 11:37:06,267 - DEBUG - Attempting to release lock 124773557236816 on /home/hagen/.cache/huggingface/datasets/_home_hagen_.cache_huggingface_datasets_patrickvonplaten___librispeech_asr_dummy_clean_2.1.0_f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc.lock
2025-06-07 11:37:06,267 - DEBUG - Lock 124773557236816 released on /home/hagen/.cache/huggingface/datasets/_home_hagen_.cache_huggingface_datasets_patrickvonplaten___librispeech_asr_dummy_clean_2.1.0_f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc.lock
2025-06-07 11:37:06,268 - DEBUG - Attempting to acquire lock 124773557327248 on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:37:06,268 - DEBUG - Lock 124773557327248 acquired on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:37:06,269 - DEBUG - Attempting to release lock 124773557327248 on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:37:06,269 - DEBUG - Lock 124773557327248 released on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:37:06,270 - DEBUG - Attempting to acquire lock 124773557238416 on /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc_builder.lock
2025-06-07 11:37:06,270 - DEBUG - Lock 124773557238416 acquired on /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc_builder.lock
2025-06-07 11:37:06,270 - DEBUG - open file: /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc/dataset_info.json
2025-06-07 11:37:06,270 - DEBUG - Attempting to release lock 124773557238416 on /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc_builder.lock
2025-06-07 11:37:06,270 - DEBUG - Lock 124773557238416 released on /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc_builder.lock
2025-06-07 11:37:06,342 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          18	STORE_FAST(arg=3, lineno=1140)
          20	LOAD_FAST(arg=1, lineno=1141)
          22	UNARY_NEGATIVE(arg=None, lineno=1141)
          24	LOAD_FAST(arg=3, lineno=1141)
          26	SWAP(arg=2, lineno=1141)
          28	COPY(arg=2, lineno=1141)
          30	COMPARE_OP(arg=1, lineno=1141)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1141)
          38	LOAD_FAST(arg=1, lineno=1141)
          40	COMPARE_OP(arg=1, lineno=1141)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1141)
          48	JUMP_FORWARD(arg=2, lineno=1141)
>         50	POP_TOP(arg=None, lineno=1141)
          52	JUMP_FORWARD(arg=2, lineno=1141)
>         54	LOAD_CONST(arg=1, lineno=1142)
          56	STORE_FAST(arg=3, lineno=1142)
>         58	LOAD_FAST(arg=0, lineno=1144)
          60	LOAD_CONST(arg=2, lineno=1144)
          62	BINARY_SUBSCR(arg=None, lineno=1144)
          72	STORE_FAST(arg=4, lineno=1144)
          74	LOAD_FAST(arg=1, lineno=1145)
          76	UNARY_NEGATIVE(arg=None, lineno=1145)
          78	LOAD_FAST(arg=4, lineno=1145)
          80	SWAP(arg=2, lineno=1145)
          82	COPY(arg=2, lineno=1145)
          84	COMPARE_OP(arg=1, lineno=1145)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          92	LOAD_FAST(arg=1, lineno=1145)
          94	COMPARE_OP(arg=1, lineno=1145)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
         102	JUMP_FORWARD(arg=2, lineno=1145)
>        104	POP_TOP(arg=None, lineno=1145)
         106	JUMP_FORWARD(arg=2, lineno=1145)
>        108	LOAD_CONST(arg=1, lineno=1146)
         110	STORE_FAST(arg=4, lineno=1146)
>        112	LOAD_FAST(arg=2, lineno=1148)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1148)
         116	LOAD_GLOBAL(arg=1, lineno=1149)
         128	LOAD_ATTR(arg=1, lineno=1149)
         138	LOAD_FAST(arg=3, lineno=1149)
         140	PRECALL(arg=1, lineno=1149)
         144	CALL(arg=1, lineno=1149)
         154	LOAD_GLOBAL(arg=1, lineno=1149)
         166	LOAD_ATTR(arg=1, lineno=1149)
         176	LOAD_FAST(arg=4, lineno=1149)
         178	PRECALL(arg=1, lineno=1149)
         182	CALL(arg=1, lineno=1149)
         192	COMPARE_OP(arg=3, lineno=1149)
         198	RETURN_VALUE(arg=None, lineno=1149)
>        200	LOAD_GLOBAL(arg=1, lineno=1151)
         212	LOAD_ATTR(arg=2, lineno=1151)
         222	LOAD_FAST(arg=3, lineno=1151)
         224	PRECALL(arg=1, lineno=1151)
         228	CALL(arg=1, lineno=1151)
         238	LOAD_GLOBAL(arg=1, lineno=1151)
         250	LOAD_ATTR(arg=2, lineno=1151)
         260	LOAD_FAST(arg=4, lineno=1151)
         262	PRECALL(arg=1, lineno=1151)
         266	CALL(arg=1, lineno=1151)
         276	COMPARE_OP(arg=3, lineno=1151)
         282	RETURN_VALUE(arg=None, lineno=1151)
2025-06-07 11:37:06,342 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-07 11:37:06,342 - DEBUG - stack: []
2025-06-07 11:37:06,343 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-07 11:37:06,343 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-06-07 11:37:06,343 - DEBUG - stack []
2025-06-07 11:37:06,343 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-06-07 11:37:06,343 - DEBUG - stack []
2025-06-07 11:37:06,343 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-06-07 11:37:06,343 - DEBUG - stack []
2025-06-07 11:37:06,343 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-06-07 11:37:06,343 - DEBUG - stack ['$x4.0']
2025-06-07 11:37:06,343 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-06-07 11:37:06,343 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-06-07 11:37:06,343 - DEBUG - dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1140)
2025-06-07 11:37:06,343 - DEBUG - stack ['$8binary_subscr.2']
2025-06-07 11:37:06,344 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1141)
2025-06-07 11:37:06,344 - DEBUG - stack []
2025-06-07 11:37:06,344 - DEBUG - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-06-07 11:37:06,344 - DEBUG - stack ['$threshold20.3']
2025-06-07 11:37:06,344 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1141)
2025-06-07 11:37:06,344 - DEBUG - stack ['$22unary_negative.4']
2025-06-07 11:37:06,344 - DEBUG - dispatch pc=26, inst=SWAP(arg=2, lineno=1141)
2025-06-07 11:37:06,344 - DEBUG - stack ['$22unary_negative.4', '$x024.5']
2025-06-07 11:37:06,344 - DEBUG - dispatch pc=28, inst=COPY(arg=2, lineno=1141)
2025-06-07 11:37:06,344 - DEBUG - stack ['$x024.5', '$22unary_negative.4']
2025-06-07 11:37:06,344 - DEBUG - dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1141)
2025-06-07 11:37:06,344 - DEBUG - stack ['$x024.5', '$22unary_negative.4', '$x024.5']
2025-06-07 11:37:06,344 - DEBUG - dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1141)
2025-06-07 11:37:06,344 - DEBUG - stack ['$x024.5', '$30compare_op.6']
2025-06-07 11:37:06,344 - DEBUG - end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
2025-06-07 11:37:06,345 - DEBUG - pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
2025-06-07 11:37:06,345 - DEBUG - stack: ['$phi38.0']
2025-06-07 11:37:06,345 - DEBUG - state.pc_initial: State(pc_initial=38 nstack_initial=1)
2025-06-07 11:37:06,345 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1141)
2025-06-07 11:37:06,345 - DEBUG - stack ['$phi38.0']
2025-06-07 11:37:06,345 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1141)
2025-06-07 11:37:06,345 - DEBUG - stack ['$phi38.0', '$threshold38.1']
2025-06-07 11:37:06,345 - DEBUG - dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1141)
2025-06-07 11:37:06,345 - DEBUG - stack ['$40compare_op.2']
2025-06-07 11:37:06,345 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2025-06-07 11:37:06,345 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2025-06-07 11:37:06,345 - DEBUG - stack: ['$phi50.0']
2025-06-07 11:37:06,345 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2025-06-07 11:37:06,345 - DEBUG - dispatch pc=50, inst=POP_TOP(arg=None, lineno=1141)
2025-06-07 11:37:06,346 - DEBUG - stack ['$phi50.0']
2025-06-07 11:37:06,346 - DEBUG - dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-06-07 11:37:06,346 - DEBUG - stack []
2025-06-07 11:37:06,346 - DEBUG - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2025-06-07 11:37:06,346 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2025-06-07 11:37:06,346 - DEBUG - stack: []
2025-06-07 11:37:06,346 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-06-07 11:37:06,346 - DEBUG - dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-06-07 11:37:06,346 - DEBUG - stack []
2025-06-07 11:37:06,346 - DEBUG - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
2025-06-07 11:37:06,346 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
2025-06-07 11:37:06,346 - DEBUG - stack: []
2025-06-07 11:37:06,346 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2025-06-07 11:37:06,346 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1144)
2025-06-07 11:37:06,347 - DEBUG - stack []
2025-06-07 11:37:06,347 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1144)
2025-06-07 11:37:06,347 - DEBUG - stack ['$x58.0']
2025-06-07 11:37:06,347 - DEBUG - dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-06-07 11:37:06,347 - DEBUG - stack ['$x58.0', '$const60.1.2']
2025-06-07 11:37:06,347 - DEBUG - dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1144)
2025-06-07 11:37:06,347 - DEBUG - stack ['$62binary_subscr.2']
2025-06-07 11:37:06,347 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1145)
2025-06-07 11:37:06,347 - DEBUG - stack []
2025-06-07 11:37:06,347 - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-06-07 11:37:06,347 - DEBUG - stack ['$threshold74.3']
2025-06-07 11:37:06,347 - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1145)
2025-06-07 11:37:06,347 - DEBUG - stack ['$76unary_negative.4']
2025-06-07 11:37:06,347 - DEBUG - dispatch pc=80, inst=SWAP(arg=2, lineno=1145)
2025-06-07 11:37:06,347 - DEBUG - stack ['$76unary_negative.4', '$x178.5']
2025-06-07 11:37:06,347 - DEBUG - dispatch pc=82, inst=COPY(arg=2, lineno=1145)
2025-06-07 11:37:06,348 - DEBUG - stack ['$x178.5', '$76unary_negative.4']
2025-06-07 11:37:06,348 - DEBUG - dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1145)
2025-06-07 11:37:06,348 - DEBUG - stack ['$x178.5', '$76unary_negative.4', '$x178.5']
2025-06-07 11:37:06,348 - DEBUG - dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
2025-06-07 11:37:06,348 - DEBUG - stack ['$x178.5', '$84compare_op.6']
2025-06-07 11:37:06,348 - DEBUG - end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
2025-06-07 11:37:06,348 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2025-06-07 11:37:06,348 - DEBUG - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2025-06-07 11:37:06,348 - DEBUG - stack: []
2025-06-07 11:37:06,348 - DEBUG - state.pc_initial: State(pc_initial=54 nstack_initial=0)
2025-06-07 11:37:06,348 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1142)
2025-06-07 11:37:06,348 - DEBUG - stack []
2025-06-07 11:37:06,348 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1142)
2025-06-07 11:37:06,348 - DEBUG - stack ['$const54.0.1']
2025-06-07 11:37:06,348 - DEBUG - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2025-06-07 11:37:06,349 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
2025-06-07 11:37:06,349 - DEBUG - stack: ['$phi92.0']
2025-06-07 11:37:06,349 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-06-07 11:37:06,349 - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1145)
2025-06-07 11:37:06,349 - DEBUG - stack ['$phi92.0']
2025-06-07 11:37:06,349 - DEBUG - dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1145)
2025-06-07 11:37:06,349 - DEBUG - stack ['$phi92.0', '$threshold92.1']
2025-06-07 11:37:06,349 - DEBUG - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
2025-06-07 11:37:06,349 - DEBUG - stack ['$94compare_op.2']
2025-06-07 11:37:06,349 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
2025-06-07 11:37:06,349 - DEBUG - pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 11:37:06,349 - DEBUG - stack: ['$phi104.0']
2025-06-07 11:37:06,349 - DEBUG - state.pc_initial: State(pc_initial=104 nstack_initial=1)
2025-06-07 11:37:06,349 - DEBUG - dispatch pc=104, inst=POP_TOP(arg=None, lineno=1145)
2025-06-07 11:37:06,350 - DEBUG - stack ['$phi104.0']
2025-06-07 11:37:06,350 - DEBUG - dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-06-07 11:37:06,350 - DEBUG - stack []
2025-06-07 11:37:06,350 - DEBUG - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2025-06-07 11:37:06,350 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 11:37:06,350 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 11:37:06,350 - DEBUG - stack: []
2025-06-07 11:37:06,350 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-07 11:37:06,350 - DEBUG - dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-06-07 11:37:06,350 - DEBUG - stack []
2025-06-07 11:37:06,350 - DEBUG - end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
2025-06-07 11:37:06,350 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
2025-06-07 11:37:06,350 - DEBUG - stack: []
2025-06-07 11:37:06,350 - DEBUG - state.pc_initial: State(pc_initial=112 nstack_initial=0)
2025-06-07 11:37:06,350 - DEBUG - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1148)
2025-06-07 11:37:06,351 - DEBUG - stack []
2025-06-07 11:37:06,351 - DEBUG - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1148)
2025-06-07 11:37:06,351 - DEBUG - stack ['$zero_pos112.0']
2025-06-07 11:37:06,351 - DEBUG - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
2025-06-07 11:37:06,351 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2025-06-07 11:37:06,351 - DEBUG - pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2025-06-07 11:37:06,351 - DEBUG - stack: []
2025-06-07 11:37:06,351 - DEBUG - state.pc_initial: State(pc_initial=108 nstack_initial=0)
2025-06-07 11:37:06,351 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1146)
2025-06-07 11:37:06,351 - DEBUG - stack []
2025-06-07 11:37:06,351 - DEBUG - dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1146)
2025-06-07 11:37:06,351 - DEBUG - stack ['$const108.0.1']
2025-06-07 11:37:06,351 - DEBUG - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2025-06-07 11:37:06,351 - DEBUG - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 11:37:06,352 - DEBUG - stack: []
2025-06-07 11:37:06,352 - DEBUG - state.pc_initial: State(pc_initial=116 nstack_initial=0)
2025-06-07 11:37:06,352 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1149)
2025-06-07 11:37:06,352 - DEBUG - stack []
2025-06-07 11:37:06,352 - DEBUG - dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1149)
2025-06-07 11:37:06,352 - DEBUG - stack ['$null$116.1', '$116load_global.0']
2025-06-07 11:37:06,352 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1149)
2025-06-07 11:37:06,352 - DEBUG - stack ['$null$116.1', '$128load_attr.2']
2025-06-07 11:37:06,352 - DEBUG - dispatch pc=140, inst=PRECALL(arg=1, lineno=1149)
2025-06-07 11:37:06,352 - DEBUG - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2025-06-07 11:37:06,352 - DEBUG - dispatch pc=144, inst=CALL(arg=1, lineno=1149)
2025-06-07 11:37:06,352 - DEBUG - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2025-06-07 11:37:06,352 - DEBUG - dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1149)
2025-06-07 11:37:06,352 - DEBUG - stack ['$144call.4']
2025-06-07 11:37:06,352 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1149)
2025-06-07 11:37:06,353 - DEBUG - stack ['$144call.4', '$null$154.6', '$154load_global.5']
2025-06-07 11:37:06,353 - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1149)
2025-06-07 11:37:06,353 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7']
2025-06-07 11:37:06,353 - DEBUG - dispatch pc=178, inst=PRECALL(arg=1, lineno=1149)
2025-06-07 11:37:06,353 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2025-06-07 11:37:06,353 - DEBUG - dispatch pc=182, inst=CALL(arg=1, lineno=1149)
2025-06-07 11:37:06,353 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2025-06-07 11:37:06,353 - DEBUG - dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1149)
2025-06-07 11:37:06,353 - DEBUG - stack ['$144call.4', '$182call.9']
2025-06-07 11:37:06,353 - DEBUG - dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-06-07 11:37:06,353 - DEBUG - stack ['$192compare_op.10']
2025-06-07 11:37:06,353 - DEBUG - end state. edges=[]
2025-06-07 11:37:06,353 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 11:37:06,353 - DEBUG - stack: []
2025-06-07 11:37:06,354 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=0)
2025-06-07 11:37:06,354 - DEBUG - dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1151)
2025-06-07 11:37:06,354 - DEBUG - stack []
2025-06-07 11:37:06,354 - DEBUG - dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1151)
2025-06-07 11:37:06,354 - DEBUG - stack ['$null$200.1', '$200load_global.0']
2025-06-07 11:37:06,354 - DEBUG - dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1151)
2025-06-07 11:37:06,354 - DEBUG - stack ['$null$200.1', '$212load_attr.2']
2025-06-07 11:37:06,354 - DEBUG - dispatch pc=224, inst=PRECALL(arg=1, lineno=1151)
2025-06-07 11:37:06,354 - DEBUG - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2025-06-07 11:37:06,354 - DEBUG - dispatch pc=228, inst=CALL(arg=1, lineno=1151)
2025-06-07 11:37:06,354 - DEBUG - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2025-06-07 11:37:06,354 - DEBUG - dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1151)
2025-06-07 11:37:06,354 - DEBUG - stack ['$228call.4']
2025-06-07 11:37:06,354 - DEBUG - dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1151)
2025-06-07 11:37:06,355 - DEBUG - stack ['$228call.4', '$null$238.6', '$238load_global.5']
2025-06-07 11:37:06,355 - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1151)
2025-06-07 11:37:06,355 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7']
2025-06-07 11:37:06,355 - DEBUG - dispatch pc=262, inst=PRECALL(arg=1, lineno=1151)
2025-06-07 11:37:06,355 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2025-06-07 11:37:06,355 - DEBUG - dispatch pc=266, inst=CALL(arg=1, lineno=1151)
2025-06-07 11:37:06,355 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2025-06-07 11:37:06,355 - DEBUG - dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1151)
2025-06-07 11:37:06,355 - DEBUG - stack ['$228call.4', '$266call.9']
2025-06-07 11:37:06,355 - DEBUG - dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-06-07 11:37:06,355 - DEBUG - stack ['$276compare_op.10']
2025-06-07 11:37:06,355 - DEBUG - end state. edges=[]
2025-06-07 11:37:06,356 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0)])
2025-06-07 11:37:06,356 - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-07 11:37:06,356 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
2025-06-07 11:37:06,356 - DEBUG - defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
2025-06-07 11:37:06,356 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2025-06-07 11:37:06,356 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2025-06-07 11:37:06,356 - DEBUG - keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
2025-06-07 11:37:06,357 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
2025-06-07 11:37:06,357 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-07 11:37:06,357 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
2025-06-07 11:37:06,357 - DEBUG - block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
2025-06-07 11:37:06,357 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
2025-06-07 11:37:06,357 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2025-06-07 11:37:06,357 - DEBUG - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0.1'}), (56, {'value': '$const54.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2025-06-07 11:37:06,357 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1.2'}), (62, {'index': '$const60.1.2', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
2025-06-07 11:37:06,357 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
2025-06-07 11:37:06,357 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
2025-06-07 11:37:06,358 - DEBUG - block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2025-06-07 11:37:06,358 - DEBUG - block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0.1'}), (110, {'value': '$const108.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2025-06-07 11:37:06,358 - DEBUG - block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
2025-06-07 11:37:06,358 - DEBUG - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:37:06,358 - DEBUG - block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:37:06,359 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1.2 = const(int, -1)            ['$const60.1.2']
    x1 = getitem(value=x, index=$const60.1.2, fn=<built-in function getitem>) ['$const60.1.2', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

2025-06-07 11:37:06,456 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1023)
           2	RESUME(arg=0, lineno=1023)
           4	LOAD_FAST(arg=0, lineno=1026)
           6	LOAD_CONST(arg=1, lineno=1026)
           8	BINARY_SUBSCR(arg=None, lineno=1026)
          18	LOAD_FAST(arg=0, lineno=1026)
          20	LOAD_CONST(arg=2, lineno=1026)
          22	BINARY_SUBSCR(arg=None, lineno=1026)
          32	COMPARE_OP(arg=4, lineno=1026)
          38	LOAD_FAST(arg=0, lineno=1026)
          40	LOAD_CONST(arg=1, lineno=1026)
          42	BINARY_SUBSCR(arg=None, lineno=1026)
          52	LOAD_FAST(arg=0, lineno=1026)
          54	LOAD_CONST(arg=3, lineno=1026)
          56	BINARY_SUBSCR(arg=None, lineno=1026)
          66	COMPARE_OP(arg=5, lineno=1026)
          72	BINARY_OP(arg=1, lineno=1026)
          76	RETURN_VALUE(arg=None, lineno=1026)
2025-06-07 11:37:06,456 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-07 11:37:06,456 - DEBUG - stack: []
2025-06-07 11:37:06,456 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-07 11:37:06,456 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1023)
2025-06-07 11:37:06,457 - DEBUG - stack []
2025-06-07 11:37:06,457 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1023)
2025-06-07 11:37:06,457 - DEBUG - stack []
2025-06-07 11:37:06,457 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)
2025-06-07 11:37:06,457 - DEBUG - stack []
2025-06-07 11:37:06,457 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)
2025-06-07 11:37:06,457 - DEBUG - stack ['$x4.0']
2025-06-07 11:37:06,457 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-06-07 11:37:06,457 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-06-07 11:37:06,457 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1026)
2025-06-07 11:37:06,457 - DEBUG - stack ['$8binary_subscr.2']
2025-06-07 11:37:06,457 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1026)
2025-06-07 11:37:06,457 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-06-07 11:37:06,457 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-06-07 11:37:06,457 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-06-07 11:37:06,458 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1026)
2025-06-07 11:37:06,458 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-06-07 11:37:06,458 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1026)
2025-06-07 11:37:06,458 - DEBUG - stack ['$32compare_op.6']
2025-06-07 11:37:06,458 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1026)
2025-06-07 11:37:06,458 - DEBUG - stack ['$32compare_op.6', '$x38.7']
2025-06-07 11:37:06,458 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-06-07 11:37:06,458 - DEBUG - stack ['$32compare_op.6', '$x38.7', '$const40.8.1']
2025-06-07 11:37:06,458 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1026)
2025-06-07 11:37:06,458 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9']
2025-06-07 11:37:06,458 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1026)
2025-06-07 11:37:06,458 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2025-06-07 11:37:06,458 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-06-07 11:37:06,458 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11.3']
2025-06-07 11:37:06,459 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1026)
2025-06-07 11:37:06,459 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2025-06-07 11:37:06,459 - DEBUG - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1026)
2025-06-07 11:37:06,459 - DEBUG - stack ['$32compare_op.6', '$66compare_op.13']
2025-06-07 11:37:06,459 - DEBUG - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1026)
2025-06-07 11:37:06,459 - DEBUG - stack ['$binop_and_72.14']
2025-06-07 11:37:06,459 - DEBUG - end state. edges=[]
2025-06-07 11:37:06,459 - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-07 11:37:06,459 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-07 11:37:06,459 - DEBUG - defmap: {}
2025-06-07 11:37:06,459 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:37:06,459 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:37:06,459 - DEBUG - keep phismap: {}
2025-06-07 11:37:06,459 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-07 11:37:06,460 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-07 11:37:06,460 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8.1'}), (42, {'index': '$const40.8.1', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11.3'}), (56, {'index': '$const54.11.3', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:37:06,460 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8.1 = const(int, 0)             ['$const40.8.1']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8.1, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8.1', 'x']
    $const54.11.3 = const(int, 1)            ['$const54.11.3']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11.3, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11.3', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2025-06-07 11:37:06,460 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1029)
           2	RESUME(arg=0, lineno=1029)
           4	LOAD_FAST(arg=0, lineno=1032)
           6	LOAD_CONST(arg=1, lineno=1032)
           8	BINARY_SUBSCR(arg=None, lineno=1032)
          18	LOAD_FAST(arg=0, lineno=1032)
          20	LOAD_CONST(arg=2, lineno=1032)
          22	BINARY_SUBSCR(arg=None, lineno=1032)
          32	COMPARE_OP(arg=0, lineno=1032)
          38	LOAD_FAST(arg=0, lineno=1032)
          40	LOAD_CONST(arg=1, lineno=1032)
          42	BINARY_SUBSCR(arg=None, lineno=1032)
          52	LOAD_FAST(arg=0, lineno=1032)
          54	LOAD_CONST(arg=3, lineno=1032)
          56	BINARY_SUBSCR(arg=None, lineno=1032)
          66	COMPARE_OP(arg=1, lineno=1032)
          72	BINARY_OP(arg=1, lineno=1032)
          76	RETURN_VALUE(arg=None, lineno=1032)
2025-06-07 11:37:06,460 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-07 11:37:06,460 - DEBUG - stack: []
2025-06-07 11:37:06,461 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-07 11:37:06,461 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1029)
2025-06-07 11:37:06,461 - DEBUG - stack []
2025-06-07 11:37:06,461 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1029)
2025-06-07 11:37:06,461 - DEBUG - stack []
2025-06-07 11:37:06,461 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)
2025-06-07 11:37:06,461 - DEBUG - stack []
2025-06-07 11:37:06,461 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)
2025-06-07 11:37:06,461 - DEBUG - stack ['$x4.0']
2025-06-07 11:37:06,461 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-06-07 11:37:06,461 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-06-07 11:37:06,461 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1032)
2025-06-07 11:37:06,461 - DEBUG - stack ['$8binary_subscr.2']
2025-06-07 11:37:06,461 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1032)
2025-06-07 11:37:06,461 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-06-07 11:37:06,462 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-06-07 11:37:06,462 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-06-07 11:37:06,462 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1032)
2025-06-07 11:37:06,462 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-06-07 11:37:06,462 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1032)
2025-06-07 11:37:06,462 - DEBUG - stack ['$32compare_op.6']
2025-06-07 11:37:06,462 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1032)
2025-06-07 11:37:06,462 - DEBUG - stack ['$32compare_op.6', '$x38.7']
2025-06-07 11:37:06,462 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-06-07 11:37:06,462 - DEBUG - stack ['$32compare_op.6', '$x38.7', '$const40.8.1']
2025-06-07 11:37:06,462 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1032)
2025-06-07 11:37:06,462 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9']
2025-06-07 11:37:06,462 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1032)
2025-06-07 11:37:06,463 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2025-06-07 11:37:06,463 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-06-07 11:37:06,463 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11.3']
2025-06-07 11:37:06,463 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1032)
2025-06-07 11:37:06,463 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2025-06-07 11:37:06,463 - DEBUG - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1032)
2025-06-07 11:37:06,463 - DEBUG - stack ['$32compare_op.6', '$66compare_op.13']
2025-06-07 11:37:06,463 - DEBUG - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1032)
2025-06-07 11:37:06,463 - DEBUG - stack ['$binop_and_72.14']
2025-06-07 11:37:06,463 - DEBUG - end state. edges=[]
2025-06-07 11:37:06,463 - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-07 11:37:06,463 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-07 11:37:06,464 - DEBUG - defmap: {}
2025-06-07 11:37:06,464 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:37:06,464 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:37:06,464 - DEBUG - keep phismap: {}
2025-06-07 11:37:06,464 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-07 11:37:06,464 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-07 11:37:06,464 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8.1'}), (42, {'index': '$const40.8.1', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11.3'}), (56, {'index': '$const54.11.3', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:37:06,464 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8.1 = const(int, 0)             ['$const40.8.1']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8.1, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8.1', 'x']
    $const54.11.3 = const(int, 1)            ['$const54.11.3']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11.3, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11.3', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2025-06-07 11:37:06,819 - DEBUG - Added clean sample 1
2025-06-07 11:37:06,820 - DEBUG - Added noisy sample 1 with SNR 20dB
2025-06-07 11:37:06,822 - DEBUG - Added noisy sample 1 with SNR 0dB
2025-06-07 11:37:06,822 - INFO - Test set created with 3 total samples
2025-06-07 11:37:06,822 - INFO - Computing metrics...
2025-06-07 11:37:06,823 - INFO - Computing metrics for test set
2025-06-07 11:37:06,823 - DEBUG - Processing sample 1/3
2025-06-07 11:37:07,105 - DEBUG - Model confidence: 0.9745
2025-06-07 11:37:07,105 - DEBUG - Computing SHAP values
2025-06-07 11:37:07,111 - DEBUG - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 11:37:07,193 - DEBUG - Computing SHAP values with GradientExplainer
2025-06-07 11:38:46,366 - DEBUG - SHAP values computed with shape (292,)
2025-06-07 11:38:46,366 - DEBUG - SHAP values shape: (292,)
2025-06-07 11:38:46,369 - DEBUG - WER: 0.0000
2025-06-07 11:38:46,369 - DEBUG - SHAP-confidence correlation: nan
2025-06-07 11:38:46,369 - DEBUG - SHAP-WER correlation: nan
2025-06-07 11:38:46,369 - DEBUG - Processing sample 2/3
2025-06-07 11:38:46,376 - DEBUG - Model confidence: 0.9832
2025-06-07 11:38:46,376 - DEBUG - Computing SHAP values
2025-06-07 11:38:46,377 - DEBUG - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 11:38:46,383 - DEBUG - Computing SHAP values with GradientExplainer
2025-06-07 11:40:28,492 - DEBUG - SHAP values computed with shape (292,)
2025-06-07 11:40:28,492 - DEBUG - SHAP values shape: (292,)
2025-06-07 11:40:28,493 - DEBUG - WER: 0.0000
2025-06-07 11:40:28,496 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-06-07 11:40:28,496 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-07 11:40:28,496 - DEBUG - stack: []
2025-06-07 11:40:28,496 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-07 11:40:28,496 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-06-07 11:40:28,496 - DEBUG - stack []
2025-06-07 11:40:28,496 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-06-07 11:40:28,496 - DEBUG - stack []
2025-06-07 11:40:28,497 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-06-07 11:40:28,497 - DEBUG - stack []
2025-06-07 11:40:28,497 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-06-07 11:40:28,497 - DEBUG - stack ['$x4.0']
2025-06-07 11:40:28,497 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-06-07 11:40:28,497 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-06-07 11:40:28,497 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-06-07 11:40:28,497 - DEBUG - stack ['$8binary_subscr.2']
2025-06-07 11:40:28,497 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-06-07 11:40:28,497 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-06-07 11:40:28,497 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-06-07 11:40:28,497 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-06-07 11:40:28,497 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-06-07 11:40:28,497 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-06-07 11:40:28,497 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-06-07 11:40:28,498 - DEBUG - stack ['$binop_add32.6']
2025-06-07 11:40:28,498 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-06-07 11:40:28,498 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-06-07 11:40:28,498 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-06-07 11:40:28,498 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-06-07 11:40:28,498 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-06-07 11:40:28,498 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-06-07 11:40:28,498 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-06-07 11:40:28,498 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-06-07 11:40:28,498 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-06-07 11:40:28,498 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-06-07 11:40:28,498 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-06-07 11:40:28,498 - DEBUG - stack ['$binop_sub56.12']
2025-06-07 11:40:28,498 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-06-07 11:40:28,498 - DEBUG - stack []
2025-06-07 11:40:28,499 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-06-07 11:40:28,499 - DEBUG - stack ['$x62.13']
2025-06-07 11:40:28,499 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-06-07 11:40:28,499 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-06-07 11:40:28,499 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-06-07 11:40:28,499 - DEBUG - stack ['$66binary_subscr.15']
2025-06-07 11:40:28,499 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-06-07 11:40:28,499 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-06-07 11:40:28,499 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-06-07 11:40:28,499 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-06-07 11:40:28,499 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-06-07 11:40:28,499 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-06-07 11:40:28,499 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-06-07 11:40:28,499 - DEBUG - stack ['$binop_sub90.19']
2025-06-07 11:40:28,500 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-06-07 11:40:28,500 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-06-07 11:40:28,500 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-06-07 11:40:28,500 - DEBUG - stack ['$binop_truediv96.21']
2025-06-07 11:40:28,500 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-06-07 11:40:28,500 - DEBUG - stack []
2025-06-07 11:40:28,500 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-06-07 11:40:28,500 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-06-07 11:40:28,500 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-06-07 11:40:28,500 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-06-07 11:40:28,500 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-06-07 11:40:28,500 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-06-07 11:40:28,500 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-06-07 11:40:28,500 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-06-07 11:40:28,501 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-06-07 11:40:28,501 - DEBUG - stack ['$130call.26']
2025-06-07 11:40:28,501 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-06-07 11:40:28,501 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-06-07 11:40:28,501 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-06-07 11:40:28,501 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-06-07 11:40:28,501 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-06-07 11:40:28,501 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-06-07 11:40:28,501 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-06-07 11:40:28,501 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-06-07 11:40:28,501 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-06-07 11:40:28,501 - DEBUG - stack ['$130call.26', '$168call.31']
2025-06-07 11:40:28,501 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-06-07 11:40:28,501 - DEBUG - stack ['$178compare_op.32']
2025-06-07 11:40:28,502 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-06-07 11:40:28,502 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-06-07 11:40:28,502 - DEBUG - stack: []
2025-06-07 11:40:28,502 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-06-07 11:40:28,502 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-06-07 11:40:28,502 - DEBUG - stack []
2025-06-07 11:40:28,502 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-06-07 11:40:28,502 - DEBUG - stack ['$const186.0.4']
2025-06-07 11:40:28,502 - DEBUG - end state. edges=[]
2025-06-07 11:40:28,502 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-06-07 11:40:28,502 - DEBUG - stack: []
2025-06-07 11:40:28,502 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-06-07 11:40:28,502 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-06-07 11:40:28,502 - DEBUG - stack []
2025-06-07 11:40:28,502 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-06-07 11:40:28,502 - DEBUG - stack ['$b190.0']
2025-06-07 11:40:28,503 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-06-07 11:40:28,503 - DEBUG - stack ['$192unary_negative.1']
2025-06-07 11:40:28,503 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-06-07 11:40:28,503 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-06-07 11:40:28,503 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-06-07 11:40:28,503 - DEBUG - stack ['$binop_truediv196.3']
2025-06-07 11:40:28,503 - DEBUG - end state. edges=[]
2025-06-07 11:40:28,503 - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-07 11:40:28,503 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-06-07 11:40:28,503 - DEBUG - defmap: {}
2025-06-07 11:40:28,503 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:40:28,503 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:40:28,503 - DEBUG - keep phismap: {}
2025-06-07 11:40:28,504 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-07 11:40:28,504 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-07 11:40:28,504 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-06-07 11:40:28,504 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:40:28,504 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:40:28,505 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-06-07 11:40:28,528 - DEBUG - Noise mask shape: (93680,)
2025-06-07 11:40:28,529 - DEBUG - Resized noise mask shape: (292,)
2025-06-07 11:40:28,529 - DEBUG - SHAP-noise correlation: nan
2025-06-07 11:40:28,529 - DEBUG - SHAP-confidence correlation: nan
2025-06-07 11:40:28,529 - DEBUG - SHAP-WER correlation: nan
2025-06-07 11:40:28,529 - DEBUG - Processing sample 3/3
2025-06-07 11:40:28,536 - DEBUG - Model confidence: 0.8053
2025-06-07 11:40:28,537 - DEBUG - Computing SHAP values
2025-06-07 11:40:28,537 - DEBUG - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 11:40:28,543 - DEBUG - Computing SHAP values with GradientExplainer
2025-06-07 11:42:10,620 - DEBUG - SHAP values computed with shape (292,)
2025-06-07 11:42:10,621 - DEBUG - SHAP values shape: (292,)
2025-06-07 11:42:10,621 - DEBUG - WER: 1.0000
2025-06-07 11:42:10,622 - DEBUG - Noise mask shape: (93680,)
2025-06-07 11:42:10,622 - DEBUG - Resized noise mask shape: (292,)
2025-06-07 11:42:10,622 - DEBUG - SHAP-noise correlation: nan
2025-06-07 11:42:10,623 - DEBUG - SHAP-confidence correlation: nan
2025-06-07 11:42:10,623 - DEBUG - SHAP-WER correlation: nan
2025-06-07 11:42:10,623 - INFO - Average shap_noise_correlation: nan
2025-06-07 11:42:10,623 - INFO - Average shap_confidence_correlation: nan
2025-06-07 11:42:10,623 - INFO - Average wer_correlation: nan
2025-06-07 11:42:10,623 - INFO - Visualizing results...
2025-06-07 11:42:10,623 - INFO - Saving results to results
2025-06-07 11:42:10,624 - INFO - Metrics saved to metrics.json
2025-06-07 11:42:10,624 - DEBUG - Creating visualization for sample 1
2025-06-07 11:42:10,634 - DEBUG - Loaded backend agg version v2.2.
2025-06-07 11:42:10,636 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-06-07 11:42:10,636 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,636 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:42:10,636 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:42:10,637 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:42:10,637 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,637 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,637 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,637 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-06-07 11:42:10,637 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,637 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,637 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,637 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,637 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,637 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,638 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-06-07 11:42:10,638 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-06-07 11:42:10,638 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,638 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,638 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,638 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,638 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-06-07 11:42:10,638 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:42:10,638 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,638 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,638 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,639 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:42:10,639 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,639 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,639 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,639 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,639 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,639 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:42:10,639 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:42:10,639 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,639 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:42:10,639 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,640 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,640 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,640 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-06-07 11:42:10,640 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-06-07 11:42:10,640 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,640 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:42:10,640 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,640 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,640 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-06-07 11:42:10,640 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,641 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,641 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,641 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:42:10,641 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-06-07 11:42:10,641 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:42:10,641 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-06-07 11:42:10,641 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:42:10,641 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-06-07 11:42:10,641 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-06-07 11:42:10,641 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,641 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-06-07 11:42:10,642 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,642 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-06-07 11:42:10,654 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x717b04538650>
2025-06-07 11:42:10,658 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x717b046dd990> <matplotlib.colors.Normalize object at 0x717b046dd990>
2025-06-07 11:42:10,659 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x717b045598d0>
2025-06-07 11:42:10,660 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x717b046dd990> <matplotlib.colors.Normalize object at 0x717b046dd990>
2025-06-07 11:42:10,661 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x717b045598d0>
2025-06-07 11:42:10,662 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x717b047f1a50>
2025-06-07 11:42:10,672 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-06-07 11:42:10,672 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,673 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:42:10,673 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:42:10,673 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:42:10,673 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,673 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,673 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,673 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-06-07 11:42:10,673 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,674 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,674 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,674 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,674 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,674 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,674 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-06-07 11:42:10,674 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-06-07 11:42:10,674 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,674 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,675 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,675 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,675 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-06-07 11:42:10,675 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:42:10,675 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,675 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,675 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,675 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:42:10,675 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,675 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,675 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,676 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,676 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,676 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:42:10,676 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:42:10,676 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,676 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:42:10,676 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,676 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,676 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,676 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-06-07 11:42:10,677 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-06-07 11:42:10,677 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,677 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:42:10,677 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,677 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,677 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-06-07 11:42:10,677 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,677 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,677 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:42:10,677 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:42:10,677 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-06-07 11:42:10,678 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:42:10,678 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-06-07 11:42:10,678 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:42:10,678 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-06-07 11:42:10,678 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-06-07 11:42:10,678 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,678 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-06-07 11:42:10,678 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:42:10,678 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-06-07 11:42:11,890 - DEBUG - Visualization saved for sample 1
2025-06-07 11:42:11,890 - DEBUG - Creating visualization for sample 2
2025-06-07 11:42:11,908 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x717b045b2bd0>
2025-06-07 11:42:11,912 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x717b0440a090> <matplotlib.colors.Normalize object at 0x717b0440a090>
2025-06-07 11:42:11,913 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x717b0444c410>
2025-06-07 11:42:11,913 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x717b0440a090> <matplotlib.colors.Normalize object at 0x717b0440a090>
2025-06-07 11:42:11,914 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x717b0444c410>
2025-06-07 11:42:11,915 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x717b04442850>
2025-06-07 11:42:13,133 - DEBUG - Visualization saved for sample 2
2025-06-07 11:42:13,133 - DEBUG - Creating visualization for sample 3
2025-06-07 11:42:13,149 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x717b04328250>
2025-06-07 11:42:13,153 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x717b0434c310> <matplotlib.colors.Normalize object at 0x717b0434c310>
2025-06-07 11:42:13,154 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x717b043c6ad0>
2025-06-07 11:42:13,154 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x717b0434c310> <matplotlib.colors.Normalize object at 0x717b0434c310>
2025-06-07 11:42:13,155 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x717b043c6ad0>
2025-06-07 11:42:13,156 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x717b0438ee50>
2025-06-07 11:42:14,358 - DEBUG - Visualization saved for sample 3
2025-06-07 11:42:14,358 - INFO - All visualizations completed
2025-06-07 11:42:14,358 - INFO - 
Evaluation Metrics:
2025-06-07 11:42:14,358 - INFO - shap_noise_correlation: nan
2025-06-07 11:42:14,359 - INFO - shap_confidence_correlation: nan
2025-06-07 11:42:14,359 - INFO - wer_correlation: nan
2025-06-07 11:54:24,037 - INFO - Using device: cuda
2025-06-07 11:54:24,037 - INFO - Loading model: facebook/wav2vec2-base-960h
2025-06-07 11:54:24,038 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-06-07 11:54:24,183 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/preprocessor_config.json HTTP/1.1" 200 0
2025-06-07 11:54:24,299 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/tokenizer_config.json HTTP/1.1" 200 0
2025-06-07 11:54:24,415 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/processor_config.json HTTP/1.1" 404 0
2025-06-07 11:54:24,529 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/chat_template.json HTTP/1.1" 404 0
2025-06-07 11:54:24,644 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/chat_template.jinja HTTP/1.1" 404 0
2025-06-07 11:54:24,757 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/config.json HTTP/1.1" 200 0
2025-06-07 11:54:24,870 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base-960h/resolve/main/config.json HTTP/1.1" 200 0
2025-06-07 11:54:25,386 - INFO - Model loaded successfully
2025-06-07 11:54:25,387 - DEBUG - Model wrapper created
2025-06-07 11:54:25,387 - INFO - Creating test set...
2025-06-07 11:54:25,387 - INFO - Creating test set with 1 samples
2025-06-07 11:54:25,595 - DEBUG - https://huggingface.co:443 "HEAD /datasets/patrickvonplaten/librispeech_asr_dummy/resolve/main/README.md HTTP/1.1" 404 0
2025-06-07 11:54:25,717 - DEBUG - https://huggingface.co:443 "GET /api/datasets/patrickvonplaten/librispeech_asr_dummy HTTP/1.1" 200 1738
2025-06-07 11:54:25,718 - DEBUG - Starting new HTTPS connection (1): s3.amazonaws.com:443
2025-06-07 11:54:26,049 - DEBUG - https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/datasets/patrickvonplaten/librispeech_asr_dummy/patrickvonplaten/librispeech_asr_dummy.py HTTP/1.1" 404 0
2025-06-07 11:54:26,050 - DEBUG - Starting new HTTPS connection (1): datasets-server.huggingface.co:443
2025-06-07 11:54:26,434 - DEBUG - https://datasets-server.huggingface.co:443 "GET /parquet?dataset=patrickvonplaten/librispeech_asr_dummy HTTP/1.1" 501 None
2025-06-07 11:54:26,540 - DEBUG - https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/datasets/patrickvonplaten/librispeech_asr_dummy/patrickvonplaten/librispeech_asr_dummy.py HTTP/1.1" 404 0
2025-06-07 11:54:26,652 - DEBUG - https://huggingface.co:443 "GET /api/datasets/patrickvonplaten/librispeech_asr_dummy/revision/f183ce202324f42196eee789dc44c8f3200e7ab6 HTTP/1.1" 200 1738
2025-06-07 11:54:26,775 - DEBUG - https://huggingface.co:443 "HEAD /datasets/patrickvonplaten/librispeech_asr_dummy/resolve/f183ce202324f42196eee789dc44c8f3200e7ab6/dataset_infos.json HTTP/1.1" 404 0
2025-06-07 11:54:26,888 - DEBUG - https://huggingface.co:443 "HEAD /datasets/patrickvonplaten/librispeech_asr_dummy/resolve/f183ce202324f42196eee789dc44c8f3200e7ab6/README.md HTTP/1.1" 404 0
2025-06-07 11:54:26,891 - DEBUG - Attempting to acquire lock 125570784463504 on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:54:26,891 - DEBUG - Lock 125570784463504 acquired on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:54:26,894 - DEBUG - Attempting to release lock 125570784463504 on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:54:26,894 - DEBUG - Lock 125570784463504 released on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:54:26,894 - DEBUG - Attempting to acquire lock 125570797804688 on /home/hagen/.cache/huggingface/datasets/_home_hagen_.cache_huggingface_datasets_patrickvonplaten___librispeech_asr_dummy_clean_2.1.0_f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc.lock
2025-06-07 11:54:26,894 - DEBUG - Lock 125570797804688 acquired on /home/hagen/.cache/huggingface/datasets/_home_hagen_.cache_huggingface_datasets_patrickvonplaten___librispeech_asr_dummy_clean_2.1.0_f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc.lock
2025-06-07 11:54:26,896 - DEBUG - open file: /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc/dataset_info.json
2025-06-07 11:54:26,896 - DEBUG - Attempting to release lock 125570797804688 on /home/hagen/.cache/huggingface/datasets/_home_hagen_.cache_huggingface_datasets_patrickvonplaten___librispeech_asr_dummy_clean_2.1.0_f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc.lock
2025-06-07 11:54:26,896 - DEBUG - Lock 125570797804688 released on /home/hagen/.cache/huggingface/datasets/_home_hagen_.cache_huggingface_datasets_patrickvonplaten___librispeech_asr_dummy_clean_2.1.0_f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc.lock
2025-06-07 11:54:26,897 - DEBUG - Attempting to acquire lock 125570784481872 on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:54:26,898 - DEBUG - Lock 125570784481872 acquired on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:54:26,899 - DEBUG - Attempting to release lock 125570784481872 on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:54:26,899 - DEBUG - Lock 125570784481872 released on /home/hagen/.cache/huggingface/modules/datasets_modules/datasets/patrickvonplaten--librispeech_asr_dummy.lock
2025-06-07 11:54:26,899 - DEBUG - Attempting to acquire lock 125570784438224 on /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc_builder.lock
2025-06-07 11:54:26,900 - DEBUG - Lock 125570784438224 acquired on /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc_builder.lock
2025-06-07 11:54:26,900 - DEBUG - open file: /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc/dataset_info.json
2025-06-07 11:54:26,900 - DEBUG - Attempting to release lock 125570784438224 on /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc_builder.lock
2025-06-07 11:54:26,900 - DEBUG - Lock 125570784438224 released on /home/hagen/.cache/huggingface/datasets/patrickvonplaten___librispeech_asr_dummy/clean/2.1.0/f2c70a4d03ab4410954901bde48c54b85ca1b7f9bf7d616e7e2a72b5ee6ddbfc_builder.lock
2025-06-07 11:54:27,001 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          18	STORE_FAST(arg=3, lineno=1140)
          20	LOAD_FAST(arg=1, lineno=1141)
          22	UNARY_NEGATIVE(arg=None, lineno=1141)
          24	LOAD_FAST(arg=3, lineno=1141)
          26	SWAP(arg=2, lineno=1141)
          28	COPY(arg=2, lineno=1141)
          30	COMPARE_OP(arg=1, lineno=1141)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1141)
          38	LOAD_FAST(arg=1, lineno=1141)
          40	COMPARE_OP(arg=1, lineno=1141)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1141)
          48	JUMP_FORWARD(arg=2, lineno=1141)
>         50	POP_TOP(arg=None, lineno=1141)
          52	JUMP_FORWARD(arg=2, lineno=1141)
>         54	LOAD_CONST(arg=1, lineno=1142)
          56	STORE_FAST(arg=3, lineno=1142)
>         58	LOAD_FAST(arg=0, lineno=1144)
          60	LOAD_CONST(arg=2, lineno=1144)
          62	BINARY_SUBSCR(arg=None, lineno=1144)
          72	STORE_FAST(arg=4, lineno=1144)
          74	LOAD_FAST(arg=1, lineno=1145)
          76	UNARY_NEGATIVE(arg=None, lineno=1145)
          78	LOAD_FAST(arg=4, lineno=1145)
          80	SWAP(arg=2, lineno=1145)
          82	COPY(arg=2, lineno=1145)
          84	COMPARE_OP(arg=1, lineno=1145)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          92	LOAD_FAST(arg=1, lineno=1145)
          94	COMPARE_OP(arg=1, lineno=1145)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
         102	JUMP_FORWARD(arg=2, lineno=1145)
>        104	POP_TOP(arg=None, lineno=1145)
         106	JUMP_FORWARD(arg=2, lineno=1145)
>        108	LOAD_CONST(arg=1, lineno=1146)
         110	STORE_FAST(arg=4, lineno=1146)
>        112	LOAD_FAST(arg=2, lineno=1148)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1148)
         116	LOAD_GLOBAL(arg=1, lineno=1149)
         128	LOAD_ATTR(arg=1, lineno=1149)
         138	LOAD_FAST(arg=3, lineno=1149)
         140	PRECALL(arg=1, lineno=1149)
         144	CALL(arg=1, lineno=1149)
         154	LOAD_GLOBAL(arg=1, lineno=1149)
         166	LOAD_ATTR(arg=1, lineno=1149)
         176	LOAD_FAST(arg=4, lineno=1149)
         178	PRECALL(arg=1, lineno=1149)
         182	CALL(arg=1, lineno=1149)
         192	COMPARE_OP(arg=3, lineno=1149)
         198	RETURN_VALUE(arg=None, lineno=1149)
>        200	LOAD_GLOBAL(arg=1, lineno=1151)
         212	LOAD_ATTR(arg=2, lineno=1151)
         222	LOAD_FAST(arg=3, lineno=1151)
         224	PRECALL(arg=1, lineno=1151)
         228	CALL(arg=1, lineno=1151)
         238	LOAD_GLOBAL(arg=1, lineno=1151)
         250	LOAD_ATTR(arg=2, lineno=1151)
         260	LOAD_FAST(arg=4, lineno=1151)
         262	PRECALL(arg=1, lineno=1151)
         266	CALL(arg=1, lineno=1151)
         276	COMPARE_OP(arg=3, lineno=1151)
         282	RETURN_VALUE(arg=None, lineno=1151)
2025-06-07 11:54:27,001 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-07 11:54:27,001 - DEBUG - stack: []
2025-06-07 11:54:27,001 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-07 11:54:27,001 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-06-07 11:54:27,001 - DEBUG - stack []
2025-06-07 11:54:27,002 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-06-07 11:54:27,002 - DEBUG - stack []
2025-06-07 11:54:27,002 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-06-07 11:54:27,002 - DEBUG - stack []
2025-06-07 11:54:27,002 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-06-07 11:54:27,002 - DEBUG - stack ['$x4.0']
2025-06-07 11:54:27,002 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-06-07 11:54:27,002 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-06-07 11:54:27,002 - DEBUG - dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1140)
2025-06-07 11:54:27,002 - DEBUG - stack ['$8binary_subscr.2']
2025-06-07 11:54:27,002 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1141)
2025-06-07 11:54:27,002 - DEBUG - stack []
2025-06-07 11:54:27,002 - DEBUG - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-06-07 11:54:27,002 - DEBUG - stack ['$threshold20.3']
2025-06-07 11:54:27,003 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1141)
2025-06-07 11:54:27,003 - DEBUG - stack ['$22unary_negative.4']
2025-06-07 11:54:27,003 - DEBUG - dispatch pc=26, inst=SWAP(arg=2, lineno=1141)
2025-06-07 11:54:27,003 - DEBUG - stack ['$22unary_negative.4', '$x024.5']
2025-06-07 11:54:27,003 - DEBUG - dispatch pc=28, inst=COPY(arg=2, lineno=1141)
2025-06-07 11:54:27,003 - DEBUG - stack ['$x024.5', '$22unary_negative.4']
2025-06-07 11:54:27,003 - DEBUG - dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1141)
2025-06-07 11:54:27,003 - DEBUG - stack ['$x024.5', '$22unary_negative.4', '$x024.5']
2025-06-07 11:54:27,003 - DEBUG - dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1141)
2025-06-07 11:54:27,003 - DEBUG - stack ['$x024.5', '$30compare_op.6']
2025-06-07 11:54:27,003 - DEBUG - end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
2025-06-07 11:54:27,003 - DEBUG - pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
2025-06-07 11:54:27,003 - DEBUG - stack: ['$phi38.0']
2025-06-07 11:54:27,003 - DEBUG - state.pc_initial: State(pc_initial=38 nstack_initial=1)
2025-06-07 11:54:27,004 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1141)
2025-06-07 11:54:27,004 - DEBUG - stack ['$phi38.0']
2025-06-07 11:54:27,004 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1141)
2025-06-07 11:54:27,004 - DEBUG - stack ['$phi38.0', '$threshold38.1']
2025-06-07 11:54:27,004 - DEBUG - dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1141)
2025-06-07 11:54:27,004 - DEBUG - stack ['$40compare_op.2']
2025-06-07 11:54:27,004 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2025-06-07 11:54:27,004 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2025-06-07 11:54:27,004 - DEBUG - stack: ['$phi50.0']
2025-06-07 11:54:27,004 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2025-06-07 11:54:27,004 - DEBUG - dispatch pc=50, inst=POP_TOP(arg=None, lineno=1141)
2025-06-07 11:54:27,004 - DEBUG - stack ['$phi50.0']
2025-06-07 11:54:27,004 - DEBUG - dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-06-07 11:54:27,004 - DEBUG - stack []
2025-06-07 11:54:27,004 - DEBUG - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2025-06-07 11:54:27,005 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2025-06-07 11:54:27,005 - DEBUG - stack: []
2025-06-07 11:54:27,005 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-06-07 11:54:27,005 - DEBUG - dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-06-07 11:54:27,005 - DEBUG - stack []
2025-06-07 11:54:27,005 - DEBUG - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
2025-06-07 11:54:27,005 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
2025-06-07 11:54:27,005 - DEBUG - stack: []
2025-06-07 11:54:27,005 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2025-06-07 11:54:27,005 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1144)
2025-06-07 11:54:27,005 - DEBUG - stack []
2025-06-07 11:54:27,005 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1144)
2025-06-07 11:54:27,005 - DEBUG - stack ['$x58.0']
2025-06-07 11:54:27,005 - DEBUG - dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-06-07 11:54:27,006 - DEBUG - stack ['$x58.0', '$const60.1.2']
2025-06-07 11:54:27,006 - DEBUG - dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1144)
2025-06-07 11:54:27,006 - DEBUG - stack ['$62binary_subscr.2']
2025-06-07 11:54:27,006 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1145)
2025-06-07 11:54:27,006 - DEBUG - stack []
2025-06-07 11:54:27,006 - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-06-07 11:54:27,006 - DEBUG - stack ['$threshold74.3']
2025-06-07 11:54:27,006 - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1145)
2025-06-07 11:54:27,006 - DEBUG - stack ['$76unary_negative.4']
2025-06-07 11:54:27,006 - DEBUG - dispatch pc=80, inst=SWAP(arg=2, lineno=1145)
2025-06-07 11:54:27,006 - DEBUG - stack ['$76unary_negative.4', '$x178.5']
2025-06-07 11:54:27,006 - DEBUG - dispatch pc=82, inst=COPY(arg=2, lineno=1145)
2025-06-07 11:54:27,006 - DEBUG - stack ['$x178.5', '$76unary_negative.4']
2025-06-07 11:54:27,006 - DEBUG - dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1145)
2025-06-07 11:54:27,006 - DEBUG - stack ['$x178.5', '$76unary_negative.4', '$x178.5']
2025-06-07 11:54:27,007 - DEBUG - dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
2025-06-07 11:54:27,007 - DEBUG - stack ['$x178.5', '$84compare_op.6']
2025-06-07 11:54:27,007 - DEBUG - end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
2025-06-07 11:54:27,007 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2025-06-07 11:54:27,007 - DEBUG - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2025-06-07 11:54:27,007 - DEBUG - stack: []
2025-06-07 11:54:27,007 - DEBUG - state.pc_initial: State(pc_initial=54 nstack_initial=0)
2025-06-07 11:54:27,007 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1142)
2025-06-07 11:54:27,007 - DEBUG - stack []
2025-06-07 11:54:27,007 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1142)
2025-06-07 11:54:27,007 - DEBUG - stack ['$const54.0.1']
2025-06-07 11:54:27,007 - DEBUG - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2025-06-07 11:54:27,007 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
2025-06-07 11:54:27,007 - DEBUG - stack: ['$phi92.0']
2025-06-07 11:54:27,008 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-06-07 11:54:27,008 - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1145)
2025-06-07 11:54:27,008 - DEBUG - stack ['$phi92.0']
2025-06-07 11:54:27,008 - DEBUG - dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1145)
2025-06-07 11:54:27,008 - DEBUG - stack ['$phi92.0', '$threshold92.1']
2025-06-07 11:54:27,008 - DEBUG - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
2025-06-07 11:54:27,008 - DEBUG - stack ['$94compare_op.2']
2025-06-07 11:54:27,008 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
2025-06-07 11:54:27,008 - DEBUG - pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 11:54:27,008 - DEBUG - stack: ['$phi104.0']
2025-06-07 11:54:27,008 - DEBUG - state.pc_initial: State(pc_initial=104 nstack_initial=1)
2025-06-07 11:54:27,008 - DEBUG - dispatch pc=104, inst=POP_TOP(arg=None, lineno=1145)
2025-06-07 11:54:27,008 - DEBUG - stack ['$phi104.0']
2025-06-07 11:54:27,008 - DEBUG - dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-06-07 11:54:27,008 - DEBUG - stack []
2025-06-07 11:54:27,009 - DEBUG - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2025-06-07 11:54:27,009 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 11:54:27,009 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 11:54:27,009 - DEBUG - stack: []
2025-06-07 11:54:27,009 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-07 11:54:27,009 - DEBUG - dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-06-07 11:54:27,009 - DEBUG - stack []
2025-06-07 11:54:27,009 - DEBUG - end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
2025-06-07 11:54:27,009 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
2025-06-07 11:54:27,009 - DEBUG - stack: []
2025-06-07 11:54:27,009 - DEBUG - state.pc_initial: State(pc_initial=112 nstack_initial=0)
2025-06-07 11:54:27,009 - DEBUG - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1148)
2025-06-07 11:54:27,009 - DEBUG - stack []
2025-06-07 11:54:27,009 - DEBUG - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1148)
2025-06-07 11:54:27,010 - DEBUG - stack ['$zero_pos112.0']
2025-06-07 11:54:27,010 - DEBUG - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
2025-06-07 11:54:27,010 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2025-06-07 11:54:27,010 - DEBUG - pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2025-06-07 11:54:27,010 - DEBUG - stack: []
2025-06-07 11:54:27,010 - DEBUG - state.pc_initial: State(pc_initial=108 nstack_initial=0)
2025-06-07 11:54:27,010 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1146)
2025-06-07 11:54:27,010 - DEBUG - stack []
2025-06-07 11:54:27,010 - DEBUG - dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1146)
2025-06-07 11:54:27,010 - DEBUG - stack ['$const108.0.1']
2025-06-07 11:54:27,010 - DEBUG - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2025-06-07 11:54:27,010 - DEBUG - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 11:54:27,010 - DEBUG - stack: []
2025-06-07 11:54:27,010 - DEBUG - state.pc_initial: State(pc_initial=116 nstack_initial=0)
2025-06-07 11:54:27,010 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1149)
2025-06-07 11:54:27,011 - DEBUG - stack []
2025-06-07 11:54:27,011 - DEBUG - dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1149)
2025-06-07 11:54:27,011 - DEBUG - stack ['$null$116.1', '$116load_global.0']
2025-06-07 11:54:27,011 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1149)
2025-06-07 11:54:27,011 - DEBUG - stack ['$null$116.1', '$128load_attr.2']
2025-06-07 11:54:27,011 - DEBUG - dispatch pc=140, inst=PRECALL(arg=1, lineno=1149)
2025-06-07 11:54:27,011 - DEBUG - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2025-06-07 11:54:27,011 - DEBUG - dispatch pc=144, inst=CALL(arg=1, lineno=1149)
2025-06-07 11:54:27,011 - DEBUG - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2025-06-07 11:54:27,011 - DEBUG - dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1149)
2025-06-07 11:54:27,011 - DEBUG - stack ['$144call.4']
2025-06-07 11:54:27,011 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1149)
2025-06-07 11:54:27,011 - DEBUG - stack ['$144call.4', '$null$154.6', '$154load_global.5']
2025-06-07 11:54:27,011 - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1149)
2025-06-07 11:54:27,011 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7']
2025-06-07 11:54:27,012 - DEBUG - dispatch pc=178, inst=PRECALL(arg=1, lineno=1149)
2025-06-07 11:54:27,012 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2025-06-07 11:54:27,012 - DEBUG - dispatch pc=182, inst=CALL(arg=1, lineno=1149)
2025-06-07 11:54:27,012 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2025-06-07 11:54:27,012 - DEBUG - dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1149)
2025-06-07 11:54:27,012 - DEBUG - stack ['$144call.4', '$182call.9']
2025-06-07 11:54:27,012 - DEBUG - dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-06-07 11:54:27,012 - DEBUG - stack ['$192compare_op.10']
2025-06-07 11:54:27,012 - DEBUG - end state. edges=[]
2025-06-07 11:54:27,012 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2025-06-07 11:54:27,012 - DEBUG - stack: []
2025-06-07 11:54:27,012 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=0)
2025-06-07 11:54:27,012 - DEBUG - dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1151)
2025-06-07 11:54:27,012 - DEBUG - stack []
2025-06-07 11:54:27,013 - DEBUG - dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1151)
2025-06-07 11:54:27,013 - DEBUG - stack ['$null$200.1', '$200load_global.0']
2025-06-07 11:54:27,013 - DEBUG - dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1151)
2025-06-07 11:54:27,013 - DEBUG - stack ['$null$200.1', '$212load_attr.2']
2025-06-07 11:54:27,013 - DEBUG - dispatch pc=224, inst=PRECALL(arg=1, lineno=1151)
2025-06-07 11:54:27,013 - DEBUG - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2025-06-07 11:54:27,013 - DEBUG - dispatch pc=228, inst=CALL(arg=1, lineno=1151)
2025-06-07 11:54:27,013 - DEBUG - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2025-06-07 11:54:27,013 - DEBUG - dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1151)
2025-06-07 11:54:27,013 - DEBUG - stack ['$228call.4']
2025-06-07 11:54:27,013 - DEBUG - dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1151)
2025-06-07 11:54:27,013 - DEBUG - stack ['$228call.4', '$null$238.6', '$238load_global.5']
2025-06-07 11:54:27,014 - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1151)
2025-06-07 11:54:27,014 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7']
2025-06-07 11:54:27,014 - DEBUG - dispatch pc=262, inst=PRECALL(arg=1, lineno=1151)
2025-06-07 11:54:27,014 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2025-06-07 11:54:27,014 - DEBUG - dispatch pc=266, inst=CALL(arg=1, lineno=1151)
2025-06-07 11:54:27,014 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2025-06-07 11:54:27,014 - DEBUG - dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1151)
2025-06-07 11:54:27,014 - DEBUG - stack ['$228call.4', '$266call.9']
2025-06-07 11:54:27,014 - DEBUG - dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-06-07 11:54:27,014 - DEBUG - stack ['$276compare_op.10']
2025-06-07 11:54:27,014 - DEBUG - end state. edges=[]
2025-06-07 11:54:27,014 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0)])
2025-06-07 11:54:27,014 - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-07 11:54:27,014 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
2025-06-07 11:54:27,015 - DEBUG - defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
2025-06-07 11:54:27,015 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2025-06-07 11:54:27,015 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2025-06-07 11:54:27,015 - DEBUG - keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
2025-06-07 11:54:27,015 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
2025-06-07 11:54:27,015 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-07 11:54:27,015 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
2025-06-07 11:54:27,016 - DEBUG - block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
2025-06-07 11:54:27,016 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
2025-06-07 11:54:27,016 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2025-06-07 11:54:27,016 - DEBUG - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0.1'}), (56, {'value': '$const54.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2025-06-07 11:54:27,016 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1.2'}), (62, {'index': '$const60.1.2', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
2025-06-07 11:54:27,016 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
2025-06-07 11:54:27,016 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
2025-06-07 11:54:27,016 - DEBUG - block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2025-06-07 11:54:27,016 - DEBUG - block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0.1'}), (110, {'value': '$const108.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2025-06-07 11:54:27,016 - DEBUG - block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
2025-06-07 11:54:27,016 - DEBUG - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:54:27,016 - DEBUG - block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:54:27,017 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1.2 = const(int, -1)            ['$const60.1.2']
    x1 = getitem(value=x, index=$const60.1.2, fn=<built-in function getitem>) ['$const60.1.2', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

2025-06-07 11:54:27,194 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1023)
           2	RESUME(arg=0, lineno=1023)
           4	LOAD_FAST(arg=0, lineno=1026)
           6	LOAD_CONST(arg=1, lineno=1026)
           8	BINARY_SUBSCR(arg=None, lineno=1026)
          18	LOAD_FAST(arg=0, lineno=1026)
          20	LOAD_CONST(arg=2, lineno=1026)
          22	BINARY_SUBSCR(arg=None, lineno=1026)
          32	COMPARE_OP(arg=4, lineno=1026)
          38	LOAD_FAST(arg=0, lineno=1026)
          40	LOAD_CONST(arg=1, lineno=1026)
          42	BINARY_SUBSCR(arg=None, lineno=1026)
          52	LOAD_FAST(arg=0, lineno=1026)
          54	LOAD_CONST(arg=3, lineno=1026)
          56	BINARY_SUBSCR(arg=None, lineno=1026)
          66	COMPARE_OP(arg=5, lineno=1026)
          72	BINARY_OP(arg=1, lineno=1026)
          76	RETURN_VALUE(arg=None, lineno=1026)
2025-06-07 11:54:27,194 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-07 11:54:27,194 - DEBUG - stack: []
2025-06-07 11:54:27,194 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-07 11:54:27,194 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1023)
2025-06-07 11:54:27,194 - DEBUG - stack []
2025-06-07 11:54:27,194 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1023)
2025-06-07 11:54:27,194 - DEBUG - stack []
2025-06-07 11:54:27,194 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)
2025-06-07 11:54:27,194 - DEBUG - stack []
2025-06-07 11:54:27,195 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)
2025-06-07 11:54:27,195 - DEBUG - stack ['$x4.0']
2025-06-07 11:54:27,195 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-06-07 11:54:27,195 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-06-07 11:54:27,195 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1026)
2025-06-07 11:54:27,195 - DEBUG - stack ['$8binary_subscr.2']
2025-06-07 11:54:27,195 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1026)
2025-06-07 11:54:27,195 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-06-07 11:54:27,195 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-06-07 11:54:27,195 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-06-07 11:54:27,195 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1026)
2025-06-07 11:54:27,195 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-06-07 11:54:27,195 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1026)
2025-06-07 11:54:27,195 - DEBUG - stack ['$32compare_op.6']
2025-06-07 11:54:27,196 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1026)
2025-06-07 11:54:27,196 - DEBUG - stack ['$32compare_op.6', '$x38.7']
2025-06-07 11:54:27,196 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-06-07 11:54:27,196 - DEBUG - stack ['$32compare_op.6', '$x38.7', '$const40.8.1']
2025-06-07 11:54:27,196 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1026)
2025-06-07 11:54:27,196 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9']
2025-06-07 11:54:27,196 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1026)
2025-06-07 11:54:27,196 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2025-06-07 11:54:27,196 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-06-07 11:54:27,196 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11.3']
2025-06-07 11:54:27,196 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1026)
2025-06-07 11:54:27,196 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2025-06-07 11:54:27,196 - DEBUG - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1026)
2025-06-07 11:54:27,196 - DEBUG - stack ['$32compare_op.6', '$66compare_op.13']
2025-06-07 11:54:27,196 - DEBUG - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1026)
2025-06-07 11:54:27,197 - DEBUG - stack ['$binop_and_72.14']
2025-06-07 11:54:27,197 - DEBUG - end state. edges=[]
2025-06-07 11:54:27,197 - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-07 11:54:27,197 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-07 11:54:27,197 - DEBUG - defmap: {}
2025-06-07 11:54:27,197 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:54:27,197 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:54:27,197 - DEBUG - keep phismap: {}
2025-06-07 11:54:27,197 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-07 11:54:27,197 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-07 11:54:27,197 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8.1'}), (42, {'index': '$const40.8.1', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11.3'}), (56, {'index': '$const54.11.3', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:54:27,198 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8.1 = const(int, 0)             ['$const40.8.1']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8.1, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8.1', 'x']
    $const54.11.3 = const(int, 1)            ['$const54.11.3']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11.3, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11.3', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2025-06-07 11:54:27,198 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1029)
           2	RESUME(arg=0, lineno=1029)
           4	LOAD_FAST(arg=0, lineno=1032)
           6	LOAD_CONST(arg=1, lineno=1032)
           8	BINARY_SUBSCR(arg=None, lineno=1032)
          18	LOAD_FAST(arg=0, lineno=1032)
          20	LOAD_CONST(arg=2, lineno=1032)
          22	BINARY_SUBSCR(arg=None, lineno=1032)
          32	COMPARE_OP(arg=0, lineno=1032)
          38	LOAD_FAST(arg=0, lineno=1032)
          40	LOAD_CONST(arg=1, lineno=1032)
          42	BINARY_SUBSCR(arg=None, lineno=1032)
          52	LOAD_FAST(arg=0, lineno=1032)
          54	LOAD_CONST(arg=3, lineno=1032)
          56	BINARY_SUBSCR(arg=None, lineno=1032)
          66	COMPARE_OP(arg=1, lineno=1032)
          72	BINARY_OP(arg=1, lineno=1032)
          76	RETURN_VALUE(arg=None, lineno=1032)
2025-06-07 11:54:27,198 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-07 11:54:27,198 - DEBUG - stack: []
2025-06-07 11:54:27,198 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-07 11:54:27,198 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1029)
2025-06-07 11:54:27,198 - DEBUG - stack []
2025-06-07 11:54:27,198 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1029)
2025-06-07 11:54:27,198 - DEBUG - stack []
2025-06-07 11:54:27,199 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)
2025-06-07 11:54:27,199 - DEBUG - stack []
2025-06-07 11:54:27,199 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)
2025-06-07 11:54:27,199 - DEBUG - stack ['$x4.0']
2025-06-07 11:54:27,199 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-06-07 11:54:27,199 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-06-07 11:54:27,199 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1032)
2025-06-07 11:54:27,199 - DEBUG - stack ['$8binary_subscr.2']
2025-06-07 11:54:27,199 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1032)
2025-06-07 11:54:27,199 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-06-07 11:54:27,199 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-06-07 11:54:27,199 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-06-07 11:54:27,199 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1032)
2025-06-07 11:54:27,199 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-06-07 11:54:27,199 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1032)
2025-06-07 11:54:27,200 - DEBUG - stack ['$32compare_op.6']
2025-06-07 11:54:27,200 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1032)
2025-06-07 11:54:27,200 - DEBUG - stack ['$32compare_op.6', '$x38.7']
2025-06-07 11:54:27,200 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-06-07 11:54:27,200 - DEBUG - stack ['$32compare_op.6', '$x38.7', '$const40.8.1']
2025-06-07 11:54:27,200 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1032)
2025-06-07 11:54:27,200 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9']
2025-06-07 11:54:27,200 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1032)
2025-06-07 11:54:27,200 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2025-06-07 11:54:27,200 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-06-07 11:54:27,200 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11.3']
2025-06-07 11:54:27,200 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1032)
2025-06-07 11:54:27,200 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2025-06-07 11:54:27,200 - DEBUG - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1032)
2025-06-07 11:54:27,200 - DEBUG - stack ['$32compare_op.6', '$66compare_op.13']
2025-06-07 11:54:27,201 - DEBUG - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1032)
2025-06-07 11:54:27,201 - DEBUG - stack ['$binop_and_72.14']
2025-06-07 11:54:27,201 - DEBUG - end state. edges=[]
2025-06-07 11:54:27,201 - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-07 11:54:27,201 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-07 11:54:27,201 - DEBUG - defmap: {}
2025-06-07 11:54:27,201 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:54:27,201 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:54:27,201 - DEBUG - keep phismap: {}
2025-06-07 11:54:27,201 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-07 11:54:27,201 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-07 11:54:27,201 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8.1'}), (42, {'index': '$const40.8.1', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11.3'}), (56, {'index': '$const54.11.3', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:54:27,202 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8.1 = const(int, 0)             ['$const40.8.1']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8.1, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8.1', 'x']
    $const54.11.3 = const(int, 1)            ['$const54.11.3']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11.3, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11.3', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2025-06-07 11:54:27,574 - DEBUG - Added clean sample 1
2025-06-07 11:54:27,576 - DEBUG - Added noisy sample 1 with SNR 20dB
2025-06-07 11:54:27,577 - DEBUG - Added noisy sample 1 with SNR 0dB
2025-06-07 11:54:27,578 - INFO - Test set created with 3 total samples
2025-06-07 11:54:27,578 - INFO - Computing metrics...
2025-06-07 11:54:27,578 - INFO - Computing metrics for test set
2025-06-07 11:54:27,578 - DEBUG - Processing sample 1/3
2025-06-07 11:54:28,013 - DEBUG - Model confidence: 0.9745
2025-06-07 11:54:28,013 - DEBUG - Computing SHAP values
2025-06-07 11:54:28,021 - DEBUG - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 11:54:28,107 - DEBUG - Computing SHAP values with GradientExplainer
2025-06-07 11:56:10,369 - DEBUG - SHAP values computed with shape (292,)
2025-06-07 11:56:10,370 - DEBUG - SHAP values shape: (292,)
2025-06-07 11:56:10,370 - DEBUG - SHAP values range: [0.0000, 0.0000]
2025-06-07 11:56:10,374 - DEBUG - WER: 0.0000
2025-06-07 11:56:10,375 - DEBUG - Processing sample 2/3
2025-06-07 11:56:10,382 - DEBUG - Model confidence: 0.9810
2025-06-07 11:56:10,382 - DEBUG - Computing SHAP values
2025-06-07 11:56:10,383 - DEBUG - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 11:56:10,391 - DEBUG - Computing SHAP values with GradientExplainer
2025-06-07 11:57:52,013 - DEBUG - SHAP values computed with shape (292,)
2025-06-07 11:57:52,014 - DEBUG - SHAP values shape: (292,)
2025-06-07 11:57:52,014 - DEBUG - SHAP values range: [0.0000, 0.0000]
2025-06-07 11:57:52,015 - DEBUG - WER: 0.0000
2025-06-07 11:57:52,019 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-06-07 11:57:52,019 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-07 11:57:52,019 - DEBUG - stack: []
2025-06-07 11:57:52,019 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-07 11:57:52,020 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-06-07 11:57:52,020 - DEBUG - stack []
2025-06-07 11:57:52,020 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-06-07 11:57:52,020 - DEBUG - stack []
2025-06-07 11:57:52,020 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-06-07 11:57:52,020 - DEBUG - stack []
2025-06-07 11:57:52,020 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-06-07 11:57:52,020 - DEBUG - stack ['$x4.0']
2025-06-07 11:57:52,020 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-06-07 11:57:52,020 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-06-07 11:57:52,020 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-06-07 11:57:52,020 - DEBUG - stack ['$8binary_subscr.2']
2025-06-07 11:57:52,020 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-06-07 11:57:52,020 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-06-07 11:57:52,020 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-06-07 11:57:52,021 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-06-07 11:57:52,021 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-06-07 11:57:52,021 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-06-07 11:57:52,021 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-06-07 11:57:52,021 - DEBUG - stack ['$binop_add32.6']
2025-06-07 11:57:52,021 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-06-07 11:57:52,021 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-06-07 11:57:52,021 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-06-07 11:57:52,021 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-06-07 11:57:52,021 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-06-07 11:57:52,021 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-06-07 11:57:52,021 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-06-07 11:57:52,021 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-06-07 11:57:52,022 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-06-07 11:57:52,022 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-06-07 11:57:52,022 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-06-07 11:57:52,022 - DEBUG - stack ['$binop_sub56.12']
2025-06-07 11:57:52,022 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-06-07 11:57:52,022 - DEBUG - stack []
2025-06-07 11:57:52,022 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-06-07 11:57:52,022 - DEBUG - stack ['$x62.13']
2025-06-07 11:57:52,022 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-06-07 11:57:52,022 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-06-07 11:57:52,022 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-06-07 11:57:52,022 - DEBUG - stack ['$66binary_subscr.15']
2025-06-07 11:57:52,022 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-06-07 11:57:52,022 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-06-07 11:57:52,023 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-06-07 11:57:52,023 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-06-07 11:57:52,023 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-06-07 11:57:52,023 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-06-07 11:57:52,023 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-06-07 11:57:52,023 - DEBUG - stack ['$binop_sub90.19']
2025-06-07 11:57:52,023 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-06-07 11:57:52,023 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-06-07 11:57:52,023 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-06-07 11:57:52,023 - DEBUG - stack ['$binop_truediv96.21']
2025-06-07 11:57:52,023 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-06-07 11:57:52,023 - DEBUG - stack []
2025-06-07 11:57:52,023 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-06-07 11:57:52,023 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-06-07 11:57:52,024 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-06-07 11:57:52,024 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-06-07 11:57:52,024 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-06-07 11:57:52,024 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-06-07 11:57:52,024 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-06-07 11:57:52,024 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-06-07 11:57:52,024 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-06-07 11:57:52,024 - DEBUG - stack ['$130call.26']
2025-06-07 11:57:52,024 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-06-07 11:57:52,024 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-06-07 11:57:52,024 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-06-07 11:57:52,024 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-06-07 11:57:52,024 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-06-07 11:57:52,024 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-06-07 11:57:52,024 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-06-07 11:57:52,024 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-06-07 11:57:52,025 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-06-07 11:57:52,025 - DEBUG - stack ['$130call.26', '$168call.31']
2025-06-07 11:57:52,025 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-06-07 11:57:52,025 - DEBUG - stack ['$178compare_op.32']
2025-06-07 11:57:52,025 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-06-07 11:57:52,025 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-06-07 11:57:52,025 - DEBUG - stack: []
2025-06-07 11:57:52,025 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-06-07 11:57:52,025 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-06-07 11:57:52,025 - DEBUG - stack []
2025-06-07 11:57:52,025 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-06-07 11:57:52,025 - DEBUG - stack ['$const186.0.4']
2025-06-07 11:57:52,025 - DEBUG - end state. edges=[]
2025-06-07 11:57:52,025 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-06-07 11:57:52,025 - DEBUG - stack: []
2025-06-07 11:57:52,026 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-06-07 11:57:52,026 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-06-07 11:57:52,026 - DEBUG - stack []
2025-06-07 11:57:52,026 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-06-07 11:57:52,026 - DEBUG - stack ['$b190.0']
2025-06-07 11:57:52,026 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-06-07 11:57:52,026 - DEBUG - stack ['$192unary_negative.1']
2025-06-07 11:57:52,026 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-06-07 11:57:52,026 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-06-07 11:57:52,026 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-06-07 11:57:52,026 - DEBUG - stack ['$binop_truediv196.3']
2025-06-07 11:57:52,026 - DEBUG - end state. edges=[]
2025-06-07 11:57:52,026 - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-07 11:57:52,026 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-06-07 11:57:52,027 - DEBUG - defmap: {}
2025-06-07 11:57:52,027 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:57:52,027 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-07 11:57:52,027 - DEBUG - keep phismap: {}
2025-06-07 11:57:52,027 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-07 11:57:52,027 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-07 11:57:52,027 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-06-07 11:57:52,027 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:57:52,027 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-07 11:57:52,028 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from '/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/numpy/__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-06-07 11:57:52,052 - DEBUG - Noise mask shape: (93680,)
2025-06-07 11:57:52,052 - DEBUG - Noise mask range: [0.0000, 1.0000]
2025-06-07 11:57:52,052 - DEBUG - Resized noise mask shape: (292,)
2025-06-07 11:57:52,052 - WARNING - Constant values detected in sample 2
2025-06-07 11:57:52,052 - WARNING - All noise mask values: 0.0000
2025-06-07 11:57:52,052 - WARNING - All SHAP values: 0.0000
2025-06-07 11:57:52,053 - DEBUG - Processing sample 3/3
2025-06-07 11:57:52,060 - DEBUG - Model confidence: 0.8141
2025-06-07 11:57:52,060 - DEBUG - Computing SHAP values
2025-06-07 11:57:52,060 - DEBUG - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 11:57:52,066 - DEBUG - Computing SHAP values with GradientExplainer
2025-06-07 11:59:33,695 - DEBUG - SHAP values computed with shape (292,)
2025-06-07 11:59:33,695 - DEBUG - SHAP values shape: (292,)
2025-06-07 11:59:33,695 - DEBUG - SHAP values range: [0.0000, 0.0000]
2025-06-07 11:59:33,696 - DEBUG - WER: 1.0000
2025-06-07 11:59:33,696 - DEBUG - Noise mask shape: (93680,)
2025-06-07 11:59:33,696 - DEBUG - Noise mask range: [0.0000, 1.0000]
2025-06-07 11:59:33,697 - DEBUG - Resized noise mask shape: (292,)
2025-06-07 11:59:33,697 - WARNING - Constant values detected in sample 3
2025-06-07 11:59:33,697 - WARNING - All noise mask values: 0.0000
2025-06-07 11:59:33,697 - WARNING - All SHAP values: 0.0000
2025-06-07 11:59:33,697 - WARNING - No valid values for shap_noise_correlation, setting to NaN
2025-06-07 11:59:33,697 - WARNING - No valid values for shap_confidence_correlation, setting to NaN
2025-06-07 11:59:33,697 - WARNING - No valid values for wer_correlation, setting to NaN
2025-06-07 11:59:33,697 - INFO - Visualizing results...
2025-06-07 11:59:33,697 - INFO - Saving results to results
2025-06-07 11:59:33,698 - INFO - Metrics saved to metrics.json
2025-06-07 11:59:33,698 - DEBUG - Creating visualization for sample 1
2025-06-07 11:59:33,719 - DEBUG - Loaded backend agg version v2.2.
2025-06-07 11:59:33,721 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-06-07 11:59:33,721 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,721 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:59:33,722 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:59:33,722 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:59:33,722 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,722 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,722 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,722 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-06-07 11:59:33,722 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,723 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,723 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,723 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,723 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,723 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,723 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-06-07 11:59:33,723 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-06-07 11:59:33,723 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,723 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,723 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,724 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,724 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-06-07 11:59:33,724 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:59:33,724 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,724 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,724 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,724 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:59:33,724 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,724 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,724 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,724 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,725 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,725 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:59:33,725 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:59:33,725 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,725 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:59:33,725 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,725 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,725 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,725 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-06-07 11:59:33,725 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-06-07 11:59:33,726 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,726 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:59:33,726 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,726 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,726 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-06-07 11:59:33,726 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,726 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,726 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,726 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:59:33,727 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-06-07 11:59:33,727 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:59:33,727 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-06-07 11:59:33,727 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:59:33,727 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-06-07 11:59:33,727 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-06-07 11:59:33,727 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,727 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-06-07 11:59:33,727 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,727 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-06-07 11:59:33,743 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7234a2bb9950>
2025-06-07 11:59:33,747 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x7234a2bc1ad0> <matplotlib.colors.Normalize object at 0x7234a2bc1ad0>
2025-06-07 11:59:33,748 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7234a2301410>
2025-06-07 11:59:33,748 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x7234a2bc1ad0> <matplotlib.colors.Normalize object at 0x7234a2bc1ad0>
2025-06-07 11:59:33,749 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7234a2301410>
2025-06-07 11:59:33,750 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7234a2cb05d0>
2025-06-07 11:59:33,766 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-06-07 11:59:33,766 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,766 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:59:33,766 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:59:33,766 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:59:33,766 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,766 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,766 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,767 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-06-07 11:59:33,767 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,767 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,767 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,767 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,767 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,767 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,767 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-06-07 11:59:33,767 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-06-07 11:59:33,767 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,767 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,768 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,768 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,768 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-06-07 11:59:33,768 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:59:33,768 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,768 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,768 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,768 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:59:33,768 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,768 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,768 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,769 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,769 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,769 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:59:33,769 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:59:33,769 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,769 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:59:33,769 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,769 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,769 - DEBUG - findfont: score(FontEntry(fname='/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,769 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-06-07 11:59:33,769 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-06-07 11:59:33,770 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,770 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:59:33,770 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,770 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,770 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-06-07 11:59:33,770 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,770 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,770 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-06-07 11:59:33,771 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-06-07 11:59:33,771 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-06-07 11:59:33,771 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:59:33,771 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-06-07 11:59:33,771 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-06-07 11:59:33,771 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-06-07 11:59:33,772 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-06-07 11:59:33,772 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,772 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-06-07 11:59:33,772 - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-06-07 11:59:33,772 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/hagen/SHAP-Transformer-ASR/.shaptransformerasr/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-06-07 11:59:34,994 - DEBUG - Visualization saved for sample 1
2025-06-07 11:59:34,994 - DEBUG - Creating visualization for sample 2
2025-06-07 11:59:35,011 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7234a235bf50>
2025-06-07 11:59:35,015 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x7234a23a3350> <matplotlib.colors.Normalize object at 0x7234a23a3350>
2025-06-07 11:59:35,016 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7234a2387e10>
2025-06-07 11:59:35,017 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x7234a23a3350> <matplotlib.colors.Normalize object at 0x7234a23a3350>
2025-06-07 11:59:35,017 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7234a2387e10>
2025-06-07 11:59:35,019 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7234a23ff650>
2025-06-07 11:59:36,336 - DEBUG - Visualization saved for sample 2
2025-06-07 11:59:36,336 - DEBUG - Creating visualization for sample 3
2025-06-07 11:59:36,353 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7234a062bd50>
2025-06-07 11:59:36,358 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x7234a07f77d0> <matplotlib.colors.Normalize object at 0x7234a07f77d0>
2025-06-07 11:59:36,359 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7234a2cdcf90>
2025-06-07 11:59:36,359 - DEBUG - colorbar update normal <matplotlib.colors.Normalize object at 0x7234a07f77d0> <matplotlib.colors.Normalize object at 0x7234a07f77d0>
2025-06-07 11:59:36,360 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7234a2cdcf90>
2025-06-07 11:59:36,361 - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x7234a0799090>
2025-06-07 11:59:37,599 - DEBUG - Visualization saved for sample 3
2025-06-07 11:59:37,600 - INFO - All visualizations completed
2025-06-07 11:59:37,600 - INFO - 
Evaluation Metrics:
2025-06-07 11:59:37,600 - INFO - shap_noise_correlation: nan
2025-06-07 11:59:37,600 - INFO - shap_confidence_correlation: nan
2025-06-07 11:59:37,600 - INFO - wer_correlation: nan
2025-06-07 12:01:48,465 - INFO - Using device: cuda
2025-06-07 12:01:48,466 - INFO - Loading model: facebook/wav2vec2-base-960h
2025-06-07 12:01:50,407 - INFO - Model loaded successfully
2025-06-07 12:01:50,408 - INFO - Model wrapper created
2025-06-07 12:01:50,408 - INFO - Creating test set...
2025-06-07 12:01:50,408 - INFO - Creating test set with 1 samples
2025-06-07 12:01:52,344 - INFO - Added clean sample 1
2025-06-07 12:01:52,345 - INFO - Added noisy sample 1 with SNR 20dB
2025-06-07 12:01:52,347 - INFO - Added noisy sample 1 with SNR 0dB
2025-06-07 12:01:52,347 - INFO - Test set created with 3 total samples
2025-06-07 12:01:52,347 - INFO - Computing metrics...
2025-06-07 12:01:52,347 - INFO - Computing metrics for test set
2025-06-07 12:01:52,347 - INFO - Processing sample 1/3
2025-06-07 12:01:52,630 - INFO - Model confidence: 0.9745
2025-06-07 12:01:52,630 - INFO - Computing SHAP values
2025-06-07 12:01:52,635 - INFO - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 12:01:52,718 - INFO - Computing SHAP values with GradientExplainer
2025-06-07 12:03:34,345 - INFO - SHAP values computed with shape (292,)
2025-06-07 12:03:34,346 - INFO - SHAP values shape: (292,)
2025-06-07 12:03:34,346 - INFO - SHAP values range: [0.0000, 0.0000]
2025-06-07 12:03:34,349 - INFO - WER: 0.0000
2025-06-07 12:03:34,349 - INFO - Processing sample 2/3
2025-06-07 12:03:34,356 - INFO - Model confidence: 0.9796
2025-06-07 12:03:34,356 - INFO - Computing SHAP values
2025-06-07 12:03:34,356 - INFO - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 12:03:34,362 - INFO - Computing SHAP values with GradientExplainer
2025-06-07 12:05:15,956 - INFO - SHAP values computed with shape (292,)
2025-06-07 12:05:15,956 - INFO - SHAP values shape: (292,)
2025-06-07 12:05:15,956 - INFO - SHAP values range: [0.0000, 0.0000]
2025-06-07 12:05:15,957 - INFO - WER: 0.0000
2025-06-07 12:05:15,985 - INFO - Noise mask shape: (93680,)
2025-06-07 12:05:15,986 - INFO - Noise mask range: [0.0000, 1.0000]
2025-06-07 12:05:15,986 - INFO - Resized noise mask shape: (292,)
2025-06-07 12:05:15,986 - WARNING - Constant values detected in sample 2
2025-06-07 12:05:15,986 - WARNING - All noise mask values: 0.0000
2025-06-07 12:05:15,986 - WARNING - All SHAP values: 0.0000
2025-06-07 12:05:15,986 - INFO - Processing sample 3/3
2025-06-07 12:05:15,993 - INFO - Model confidence: 0.8309
2025-06-07 12:05:15,993 - INFO - Computing SHAP values
2025-06-07 12:05:15,994 - INFO - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 12:05:16,000 - INFO - Computing SHAP values with GradientExplainer
2025-06-07 12:06:54,727 - INFO - SHAP values computed with shape (292,)
2025-06-07 12:06:54,728 - INFO - SHAP values shape: (292,)
2025-06-07 12:06:54,728 - INFO - SHAP values range: [0.0000, 0.0000]
2025-06-07 12:06:54,728 - INFO - WER: 0.9412
2025-06-07 12:06:54,729 - INFO - Noise mask shape: (93680,)
2025-06-07 12:06:54,729 - INFO - Noise mask range: [0.0000, 1.0000]
2025-06-07 12:06:54,729 - INFO - Resized noise mask shape: (292,)
2025-06-07 12:06:54,729 - WARNING - Constant values detected in sample 3
2025-06-07 12:06:54,729 - WARNING - All noise mask values: 0.0000
2025-06-07 12:06:54,729 - WARNING - All SHAP values: 0.0000
2025-06-07 12:06:54,730 - WARNING - No valid values for shap_noise_correlation, setting to NaN
2025-06-07 12:06:54,730 - WARNING - No valid values for shap_confidence_correlation, setting to NaN
2025-06-07 12:06:54,730 - WARNING - No valid values for wer_correlation, setting to NaN
2025-06-07 12:06:54,730 - INFO - Visualizing results...
2025-06-07 12:06:54,730 - INFO - Saving results to results
2025-06-07 12:06:54,731 - INFO - Metrics saved to metrics.json
2025-06-07 12:06:54,731 - INFO - Creating visualization for sample 1
2025-06-07 12:06:58,945 - INFO - Visualization saved for sample 1
2025-06-07 12:06:58,945 - INFO - Creating visualization for sample 2
2025-06-07 12:07:00,292 - INFO - Visualization saved for sample 2
2025-06-07 12:07:00,293 - INFO - Creating visualization for sample 3
2025-06-07 12:07:01,510 - INFO - Visualization saved for sample 3
2025-06-07 12:07:01,511 - INFO - All visualizations completed
2025-06-07 12:07:01,511 - INFO - 
Evaluation Metrics:
2025-06-07 12:07:01,511 - INFO - shap_noise_correlation: nan
2025-06-07 12:07:01,511 - INFO - shap_confidence_correlation: nan
2025-06-07 12:07:01,511 - INFO - wer_correlation: nan
2025-06-07 12:33:48,706 - INFO - Using device: cuda
2025-06-07 12:33:48,706 - INFO - Loading model: facebook/wav2vec2-base-960h
2025-06-07 12:33:50,238 - INFO - Model loaded successfully
2025-06-07 12:33:50,239 - INFO - Model wrapper created
2025-06-07 12:33:50,239 - INFO - Creating test set...
2025-06-07 12:33:50,239 - INFO - Creating test set with 1 samples
2025-06-07 12:33:52,239 - INFO - Added clean sample 1
2025-06-07 12:33:52,241 - INFO - Added noisy sample 1 with SNR 20dB
2025-06-07 12:33:52,243 - INFO - Added noisy sample 1 with SNR 0dB
2025-06-07 12:33:52,243 - INFO - Test set created with 3 total samples
2025-06-07 12:33:52,243 - INFO - Computing metrics...
2025-06-07 12:33:52,243 - INFO - Computing metrics for test set
2025-06-07 12:33:52,243 - INFO - Processing sample 1/3
2025-06-07 12:33:52,675 - INFO - Model confidence: 0.9745
2025-06-07 12:33:52,675 - INFO - Computing SHAP values
2025-06-07 12:33:52,683 - INFO - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 12:33:52,772 - INFO - Computing SHAP values with GradientExplainer
2025-06-07 12:35:35,190 - INFO - SHAP values computed with shape (292,)
2025-06-07 12:35:35,190 - INFO - SHAP values shape: (292,)
2025-06-07 12:35:35,191 - INFO - SHAP values range: [0.0000, 0.0000]
2025-06-07 12:35:35,195 - INFO - WER: 0.0000
2025-06-07 12:35:35,195 - INFO - Processing sample 2/3
2025-06-07 12:35:35,202 - INFO - Model confidence: 0.9814
2025-06-07 12:35:35,202 - INFO - Computing SHAP values
2025-06-07 12:35:35,203 - INFO - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 12:35:35,210 - INFO - Computing SHAP values with GradientExplainer
2025-06-07 12:37:17,164 - INFO - SHAP values computed with shape (292,)
2025-06-07 12:37:17,165 - INFO - SHAP values shape: (292,)
2025-06-07 12:37:17,165 - INFO - SHAP values range: [0.0000, 0.0000]
2025-06-07 12:37:17,166 - INFO - WER: 0.0000
2025-06-07 12:37:17,195 - INFO - Noise mask shape: (93680,)
2025-06-07 12:37:17,195 - INFO - Noise mask range: [0.0000, 1.0000]
2025-06-07 12:37:17,195 - INFO - Resized noise mask shape: (292,)
2025-06-07 12:37:17,195 - WARNING - Constant values detected in sample 2
2025-06-07 12:37:17,195 - WARNING - All noise mask values: 0.0000
2025-06-07 12:37:17,195 - WARNING - All SHAP values: 0.0000
2025-06-07 12:37:17,195 - INFO - Processing sample 3/3
2025-06-07 12:37:17,202 - INFO - Model confidence: 0.8346
2025-06-07 12:37:17,202 - INFO - Computing SHAP values
2025-06-07 12:37:17,203 - INFO - Created background samples with shape torch.Size([5, 1, 93680])
2025-06-07 12:37:17,209 - INFO - Computing SHAP values with GradientExplainer
2025-06-07 12:38:58,944 - INFO - SHAP values computed with shape (292,)
2025-06-07 12:38:58,944 - INFO - SHAP values shape: (292,)
2025-06-07 12:38:58,944 - INFO - SHAP values range: [0.0000, 0.0000]
2025-06-07 12:38:58,945 - INFO - WER: 1.0000
2025-06-07 12:38:58,946 - INFO - Noise mask shape: (93680,)
2025-06-07 12:38:58,946 - INFO - Noise mask range: [0.0000, 1.0000]
2025-06-07 12:38:58,946 - INFO - Resized noise mask shape: (292,)
2025-06-07 12:38:58,946 - WARNING - Constant values detected in sample 3
2025-06-07 12:38:58,946 - WARNING - All noise mask values: 0.0000
2025-06-07 12:38:58,946 - WARNING - All SHAP values: 0.0000
2025-06-07 12:38:58,947 - WARNING - No valid values for shap_noise_correlation, setting to NaN
2025-06-07 12:38:58,947 - WARNING - No valid values for shap_confidence_correlation, setting to NaN
2025-06-07 12:38:58,947 - WARNING - No valid values for wer_correlation, setting to NaN
2025-06-07 12:38:58,947 - INFO - Visualizing results...
2025-06-07 12:38:58,947 - INFO - Saving results to results
2025-06-07 12:38:58,947 - INFO - Metrics saved to metrics.json
2025-06-07 12:38:58,948 - INFO - Creating visualization for sample 1
2025-06-07 12:39:00,182 - INFO - Visualization saved for sample 1
2025-06-07 12:39:00,182 - INFO - Creating visualization for sample 2
2025-06-07 12:39:01,350 - INFO - Visualization saved for sample 2
2025-06-07 12:39:01,350 - INFO - Creating visualization for sample 3
2025-06-07 12:39:02,525 - INFO - Visualization saved for sample 3
2025-06-07 12:39:02,526 - INFO - All visualizations completed
2025-06-07 12:39:02,526 - INFO - 
Evaluation Metrics:
2025-06-07 12:39:02,526 - INFO - shap_noise_correlation: nan
2025-06-07 12:39:02,526 - INFO - shap_confidence_correlation: nan
2025-06-07 12:39:02,526 - INFO - wer_correlation: nan
2025-06-07 12:42:45,295 - INFO - Using device: cuda
2025-06-07 12:42:45,295 - INFO - Loading model: facebook/wav2vec2-base-960h
2025-06-07 12:42:46,768 - INFO - Model loaded successfully
2025-06-07 12:42:46,769 - INFO - Model wrapper created
2025-06-07 12:42:46,769 - INFO - Creating test set...
2025-06-07 12:42:46,769 - INFO - Creating test set with 1 samples
2025-06-07 12:42:48,655 - INFO - Added clean sample 1
2025-06-07 12:42:48,656 - INFO - Added noisy sample 1 with SNR 20dB
2025-06-07 12:42:48,658 - INFO - Added noisy sample 1 with SNR 0dB
2025-06-07 12:42:48,658 - INFO - Test set created with 3 total samples
2025-06-07 12:42:48,658 - INFO - Computing metrics...
2025-06-07 12:42:48,659 - INFO - Computing metrics for test set
2025-06-07 12:42:48,659 - INFO - Processing sample 1/3
2025-06-07 12:42:48,946 - INFO - Model confidence: 0.9745
2025-06-07 12:42:48,946 - INFO - Computing SHAP values
2025-06-07 12:42:48,966 - INFO - Created background samples with shape torch.Size([5, 93680])
2025-06-07 12:42:48,967 - INFO - Background mean: 0.000016
2025-06-07 12:42:48,967 - INFO - Background std: 0.010007
2025-06-07 12:42:49,056 - INFO - Model output shape: torch.Size([1, 292])
2025-06-07 12:42:49,056 - INFO - Model output mean: 14.872836
2025-06-07 12:42:49,057 - INFO - Model output std: 1.215137
2025-06-07 12:42:49,065 - INFO - Model output sum: 4342.868164
2025-06-07 12:42:49,066 - INFO - Computing SHAP values with GradientExplainer
2025-06-07 12:44:04,324 - INFO - Using device: cuda
2025-06-07 12:44:04,324 - INFO - Loading model: facebook/wav2vec2-base-960h
2025-06-07 12:44:06,019 - INFO - Model loaded successfully
2025-06-07 12:44:06,019 - INFO - Model wrapper created
2025-06-07 12:44:06,019 - INFO - Creating test set...
2025-06-07 12:44:06,019 - INFO - Creating test set with 1 samples
2025-06-07 12:44:08,075 - INFO - Added clean sample 1
2025-06-07 12:44:08,078 - INFO - Added noisy sample 1 with SNR 20dB
2025-06-07 12:44:08,079 - INFO - Added noisy sample 1 with SNR 0dB
2025-06-07 12:44:08,079 - INFO - Test set created with 3 total samples
2025-06-07 12:44:08,080 - INFO - Computing metrics...
2025-06-07 12:44:08,080 - INFO - Computing metrics for test set
2025-06-07 12:44:08,080 - INFO - Processing sample 1/3
2025-06-07 12:44:08,368 - INFO - Model confidence: 0.9745
2025-06-07 12:44:08,369 - INFO - Computing SHAP values
2025-06-07 12:44:08,387 - INFO - Created background samples with shape torch.Size([5, 93680])
2025-06-07 12:44:08,387 - INFO - Background mean: 0.000008
2025-06-07 12:44:08,387 - INFO - Background std: 0.010000
2025-06-07 12:44:08,480 - INFO - Model output shape: torch.Size([1, 292])
2025-06-07 12:44:08,481 - INFO - Model output mean: 14.872836
2025-06-07 12:44:08,481 - INFO - Model output std: 1.215137
2025-06-07 12:44:08,491 - INFO - Model output sum: 4342.868164
2025-06-07 12:44:08,491 - INFO - Computing SHAP values with GradientExplainer
2025-06-07 12:44:45,934 - INFO - Using device: cuda
2025-06-07 12:44:45,934 - INFO - Loading model: facebook/wav2vec2-base-960h
2025-06-07 12:44:47,634 - INFO - Model loaded successfully
2025-06-07 12:44:47,634 - INFO - Model wrapper created
2025-06-07 12:44:47,634 - INFO - Creating test set...
2025-06-07 12:44:47,634 - INFO - Creating test set with 1 samples
2025-06-07 12:44:49,562 - INFO - Added clean sample 1
2025-06-07 12:44:49,563 - INFO - Added noisy sample 1 with SNR 20dB
2025-06-07 12:44:49,565 - INFO - Added noisy sample 1 with SNR 0dB
2025-06-07 12:44:49,565 - INFO - Test set created with 3 total samples
2025-06-07 12:44:49,565 - INFO - Computing metrics...
2025-06-07 12:44:49,565 - INFO - Computing metrics for test set
2025-06-07 12:44:49,565 - INFO - Processing sample 1/3
2025-06-07 12:44:49,863 - INFO - Model confidence: 0.9745
2025-06-07 12:44:49,863 - INFO - Computing SHAP values
2025-06-07 12:44:49,863 - INFO - Downsampled audio from 16000 to 16000 samples
2025-06-07 12:44:49,882 - INFO - Created background samples with shape torch.Size([5, 16000])
2025-06-07 12:44:49,882 - INFO - Background mean: -0.000017
2025-06-07 12:44:49,882 - INFO - Background std: 0.010004
2025-06-07 12:44:49,969 - INFO - Model output shape: torch.Size([1, 49])
2025-06-07 12:44:49,969 - INFO - Model output mean: 12.568721
2025-06-07 12:44:49,969 - INFO - Model output std: 2.317543
2025-06-07 12:44:49,978 - INFO - Model output sum: 615.867310
2025-06-07 12:44:49,978 - INFO - Computing SHAP values with GradientExplainer
